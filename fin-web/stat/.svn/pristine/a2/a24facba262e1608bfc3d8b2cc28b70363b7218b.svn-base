<style lang="less">
    @import '../../../styles/common.less';
</style>
<template>
    <div>
        <Row>
            <Card>
                <p slot="title">
                    <Icon type="search"></Icon>
                    查询
                </p>
                <Form ref="formValidate" :model="searchFormDate" :label-width="100">
                    <Row>
                        <Col span="6" offset="2">
                            <FormItem label="指标类型:">
                                <Select v-model="searchFormDate.typecode" style="width:200px">
                                    <Option v-for="item in indicatorTypes" :value="item.code" :key="item.value">{{ item.name}}</Option>
                                </Select>
                            </FormItem>
                        </Col>
                        <Col span="6" offset="2">
                            <FormItem label="指标代码:">
                                <Input  placeholder="请输入指标代码" v-model="searchFormDate.indicatorcode" style="width:200px" ></Input>
                            </FormItem>
                        </Col>
                    </Row>
                    <Row>
                        <Col span="6" offset="2">
                            <FormItem label="是否预警:">
                                <Select v-model="searchFormDate.alertflag" style="width:200px">
                                    <Option v-for="item in cityList" :value="item.value" :key="item.value">{{ item.label }}</Option>
                                </Select>
                            </FormItem>
                        </Col>
                        <Col span="6" offset="2">
                            <FormItem label="指标名称:">
                                <Input  placeholder="请输入指标名称" v-model="searchFormDate.indicatorname" style="width:200px" ></Input>
                            </FormItem>
                        </Col>
                    </Row>
                    <Row>
                        <Col span="6" offset="2">
                            <FormItem label="是否启用:">
                                <Select v-model="searchFormDate.enabledflag" style="width:200px">
                                    <Option v-for="item in cityList3" :value="item.value" :key="item.value">{{ item.label }}</Option>
                                </Select>
                            </FormItem>
                        </Col>
                        <Col span="6" offset="2">
                            <FormItem label="归属公司:">
                                <Select v-model="searchFormDate.comcode" style="width:200px">
                                    <Option v-for="item in com2" :value="item.value" :key="item.value">{{ item.name }}</Option>
                                </Select>
                            </FormItem>
                        </Col>
                    </Row>
                    <Row>
                        <Col span="3" offset="9">
                            <Button type="primary" icon="search" @click="searchData">查询</Button>
                        </Col>
                        <Col span="3">
                            <Button icon="close" @click="cleanData">重置</Button>
                        </Col>
                    </Row>
                </Form>
            </Card>
        </Row>
        <Row class="margin-top-10">
            <Card>
                <p slot="title">
                    <Icon type="search"></Icon>
                    表格数据
                </p>
                <Row type="flex" justify="end" :gutter="8" >
                    <Col>
                        <Button icon="android-add"  type="success" @click="addData">添加</Button>
                    </Col>
                    <Col>
                        <Button icon="android-close" type="error" @click="deletEventTeamData">删除</Button>
                    </Col>
                </Row>
                <Table :data="tableData" @on-selection-change='selectionClick' :columns="tableColumns"  :loading="loading" ref="tableExcel" class="margin-top-10"></Table>
                <div style="margin: 10px;overflow: hidden;height:135px">
                    <div style="float: right;">
                        <Page :total="total" :current="pageNo" :page-size="pageSize" size="small" @on-change="changePage" @on-page-size-change="pageSizeChange" show-total show-sizer></Page>
                    </div>
                </div>
            </Card>
        </Row>
        <a id="hrefToExportTable" style="postion: absolute;left: -10px;top: -10px;width: 0px;height: 0px;"></a>
    </div>
</template>
<script>
    import {resetWorkHeight, isEmpty, getUserCookie} from '@/libs/util.js';
    import { mapActions, mapState } from 'vuex';
    export default{
        name: 'indicatorRangesList',
        data () {
            return {
                cityList: [{
                    value: '1',
                    label: '是'
                },
                {
                    value: '0',
                    label: '否'
                }],
                cityList3: [{
                    value: 1,
                    label: '是'
                },
                {
                    value: 0,
                    label: '否'
                }],
                cityList1: [{
                    value: '100',
                    label: '财务指标'
                },
                {
                    value: '200',
                    label: '监管指标'
                },
                {
                    value: '300',
                    label: '风险预警指标'
                }
                ],
                cityList2: [{
                    value: '1',
                    label: '一汽汽车金融公司'
                },
                {
                    value: '0',
                    label: '一汽财务公司'
                },
                {
                    value: '3',
                    label: '一汽汽车租赁公司'
                }
                ],
                searchFormDate: {
                    pageInfo: {
                        pageSize: '10',
                        pageNo: '1'
                    }
                },
                showFlag: {
                    areaFlag: false
                },
                tableColumns: [
                    {
                        type: 'selection',
                        width: 60,
                        align: 'center'
                    },
                    {
                        title: '指标代码',
                        align: 'center',
                        render: (h, params) => {
                            const row = params.row;
                            return h('div', [
                                h('div', row.indicators.indicatorcode)
                            ]);
                        }
                    }, {
                        title: '指标名称',
                        align: 'center',
                        render: (h, params) => {
                            const row = params.row;
                            return h('div', [
                                h('div', row.indicators.indicatorname)
                            ]);
                        }
                    }, {
                        title: '上限',
                        align: 'center',
                        key: 'topvalue'
                    }, {
                        title: '下限',
                        align: 'center',
                        key: 'lowervalue'
                    }, {
                        title: '区域范围',
                        align: 'center',
                        key: 'areatype'
                    }, {
                        title: '区域',
                        align: 'center',
                        key: 'areaname'
                    }, {
                        title: '维度类别',
                        key: 'dimtype',
                        align: 'center'
                    }, {
                        title: '维度代码',
                        key: 'dimname',
                        align: 'center'
                    }, {
                        title: '操作',
                        align: 'center',
                        render: (h, params) => {
                            return h('div', [
                                h('Button', {
                                    props: {
                                        type: 'primary',
                                        size: 'small'
                                    },
                                    style: {
                                        marginRight: '6px'
                                    },
                                    on: {
                                        click: () => {
                                            let routerParam = {id: params.row.id};
                                            this.$router.push({
                                                name: 'indicatorRangesView',
                                                query: routerParam
                                            });
                                        }
                                    }
                                }, '查看'),
                                h('Button', {
                                    props: {
                                        type: 'warning',
                                        size: 'small'
                                    },
                                    on: {
                                        click: () => {
                                            let routerParam = {id: params.row.id};
                                            this.$router.push({
                                                name: 'indicatorRangesEdit',
                                                query: routerParam
                                            });
                                        }
                                    }
                                }, '修改')
                            ]);
                        }
                    }
                ],
                idArr: [],
                excelFileName: 'data'
            };
        },
        computed: {
            ...mapState({
                loading: ({indicatorRangesList}) => indicatorRangesList.loading,
                tableData: ({indicatorRangesList}) => indicatorRangesList.teamEventListData,
                pageNo: ({indicatorRangesList}) => indicatorRangesList.pageNo,
                pageSize: ({indicatorRangesList}) => indicatorRangesList.pageSize,
                total: ({indicatorRangesList}) => indicatorRangesList.total,
                pages: ({indicatorRangesList}) => indicatorRangesList.pages,
                indicatorTypes: ({indicatorRangesList}) => indicatorRangesList.indicatorTypes,
                com2: ({indicatorsList}) => indicatorsList.com2
            })
        },
        methods: {
            ...mapActions([
                'handleTeamEventList',
                'handleDelTeamEventList',
                'handleIndicatorTypes3',
                'handelCom2'
            ]),
            /**
             * 初始化
             */
            init () {
                const user = getUserCookie();
                const roleCode = user.roleCodeList;
                if (roleCode.indexOf('0000') >= 0 || roleCode.indexOf('0001') >= 0 || roleCode.indexOf('0002') >= 0) {
                    this.showFlag.areaFlag = true;
                } else {
                    this.showFlag.areaFlag = false;
                }
                this.handleTeamEventList(this.searchFormDate).then(res => {
                    resetWorkHeight();
                });
                this.searchIndicatorTypes();
                console.log(this.total);
                console.log(this.indicatorTypes);
                this.searchFormDate.code = 'Company';
                this.searchFormDate.flag = 0;
                this.handelCom2(this.searchFormDate).then(res => {
                });
                console.log(this.com2);
            },
            searchIndicatorTypes () {
                this.handleIndicatorTypes3(this.searchFormDate).then(res => {
                    resetWorkHeight();
                });
            },
            /**
             * 点击查询按钮执行查询操作
             */
            searchData () {
                this.handleTeamEventList(this.searchFormDate).then(res => {
                    resetWorkHeight();
                    this.$Message.info('查询成功!');
                });
            },
            /**
             * 页面改变
             */
            changePage (index) {
                this.searchFormDate.pageInfo.pageNo = index;
                this.handleTeamEventList(this.searchFormDate).then(res => {
                    resetWorkHeight();
                    this.searchFormDate.pageInfo.pageNo = 1;
                });
            },
            /**
             * 切换每页条数
             */
            pageSizeChange (newPageSize) {
                this.searchFormDate.pageInfo.pageSize = newPageSize;
                this.handleTeamEventList(this.searchFormDate).then(res => {
                    resetWorkHeight();
                });
            },
            /**
             * 重置按钮
             */
            cleanData () {
                window.location.reload();
            },
            /**
             * 添加数据
             */
            addData () {
                this.$router.push({name: 'indicatorRangesAdd'});
            },
            /**
             * 删除数据
             */
            deletEventTeamData () {
                if (isEmpty(this.idArr)) {
                    this.$Message.info('请先选择一条数据再进行删除!');
                } else {
                    this.$Modal.confirm({
                        title: '删除',
                        content: '<p>您确定要删除这条数据吗?</p>',
                        onOk: () => {
                            this.handleDelTeamEventList(this.idArr).then(res => {
                                this.$Message.info('删除成功!');
                                this.handleTeamEventList(this.searchFormDate).then(res => {
                                    resetWorkHeight();
                                });
                            });
                        },
                        onCancel: () => {
                        }
                    });
                }
            },
            selectionClick: function (arr) {
                var idArr = [];
                if (!isEmpty(arr)) {
                    for (var i = 0; i < arr.length; i++) {
                        idArr.push(arr[i].id);
                    }
                }
                this.idArr = idArr;
                console.log(idArr);
            }
        },
        mounted () {
            this.init();
        }
    };
</script>


