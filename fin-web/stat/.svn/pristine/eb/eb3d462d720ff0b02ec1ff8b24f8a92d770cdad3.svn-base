<style lang="less">
    @import '../../../styles/common.less';
</style>
<template>
    <div>
        <Row>
            <Card>
                <p slot="title">
                    <Icon type="search"></Icon>
                    查询
                </p>
                <Form ref="formValidate" :rules="ruleValidate"  :model="searchFormDate" :label-width="100">
                    <Row >
                        <Col span="8" offset="2">
                            <FormItem label="预警开始时间：" prop="starDate">
                                <DatePicker type="date" :value="searchFormDate.starDate3" style="width: 100%"
                                            format="yyyy-MM-dd"
                                            @on-change="changestarDate"
                                            placeholder="请输入预警开始时间"></DatePicker>
                            </FormItem>
                        </Col>
                        <Col span="8" offset="2">
                            <FormItem label="止：" prop="endDate">
                                <DatePicker type="date"  :value="searchFormDate.endDate3" style="width: 100%"
                                            @on-change="changeendDate"
                                            format="yyyy-MM-dd" placeholder="请输入预警结束时间"></DatePicker>
                            </FormItem>
                        </Col>
                    </Row>
                    <Row>
                        <Col span="8" offset="2">
                            <FormItem label="预警信号:">
                                <Select v-model="searchFormDate.signallamp" style="width:100%" placeholder="全部">
                                    <Option value="" selected>全部</Option>
                                    <Option value="B">蓝</Option>
                                    <Option value="G">绿</Option>
                                    <Option value="Y">黄</Option>
                                    <Option value="R">红</Option>
                                </Select>
                            </FormItem>
                        </Col>
                        <Col span="8" offset="2">
                            <!--<FormItem label="指标名称：" >-->
                            <!--<Select v-model="searchFormDate.indId" style="width:100%"  >-->

                            <!--<Option v-for="item in zhiBiaoQueryList" :value="item.id" :key="item.id">-->
                            <!--{{item.indicatorname }}-->
                            <!--</Option>-->
                            <!--</Select>-->
                            <!--</FormItem>-->
                            <FormItem label="指标名称：">
                                <!--<Select v-model="searchFormDate.indId" style="width:100%">-->
                                <!--<Option v-for="item in zhiBiaoQueryList" :value="item.id" :key="item.id">{{-->
                                <!--item.indicatorname }}-->
                                <!--</Option>-->
                                <!--</Select>-->
                                <Select  :label-in-value="true" clearable v-model="searchFormDate.indId" filterable remote :remote-method="searchName"   :loading="loading" placeholder="请输入指标名称|自动搜索" >
                                    <Option v-for="item in zhiBiaoQueryList"  :value="item.id" :key="item.id" :label="item.indicatorname" >{{item.indicatorname}}</Option>
                                </Select>
                            </FormItem>
                        </Col>
                    </Row>
                    <Row>
                        <Col span="8" offset="2">
                            <FormItem label="客户名称:" prop="customname">
                                <Input v-model="searchFormDate.customname" placeholder="请输入客户名称"></Input>
                            </FormItem>
                        </Col>
                        <Col span="8" offset="2">
                            <FormItem label="任务状态:">
                                <Select v-model="searchFormDate.eventstate" style="width:100%" placeholder="全部">
                                    <Option value="">全部</Option>
                                    <Option value="0">待处理任务</Option>
                                    <Option value="1">已处理任务</Option>
                                </Select>
                            </FormItem>
                        </Col>
                    </Row>
                    <Row>
                        <Col span="8" offset="2">
                            <FormItem label="管理中心:">
                                <Select v-model="searchFormDate.areacode" style="width:100%"  placeholder="全部" >
                                    <Option value="">全部</Option>
                                    <Option v-for="item in quHuaQueryList" :value="item.value" :key="item.value">
                                        {{item.name }}
                                    </Option>
                                </Select>
                            </FormItem>
                        </Col>
                        <Col span="8" offset="2">
                            <FormItem label="操作人:" prop="creator">
                                <Input v-model="searchFormDate.creator" placeholder="操作人"></Input>
                            </FormItem>
                        </Col>

                    </Row>
                    <Row>
                        <Col span="4" offset="9">
                            <Button type="primary" icon="search" @click="chaXUN('formValidate')">查询</Button>
                        </Col>
                        <Col span="4">
                            <Button icon="close" @click="cleanData">重置</Button>
                        </Col>
                    </Row>
                </Form>
            </Card>
        </Row>
        <Row class="margin-top-10">
            <Card>
                <p slot="title">
                    <Icon type="search"></Icon>
                    表格数据
                </p>
                <Table :data="tableData" @on-selection-change='selectionClick' :columns="tableColumns" :loading="loading" ref="tableExcel"
                       class="margin-top-10"></Table>
                <div style="margin: 10px;overflow: hidden">
                    <div style="float: right;">
                        <Page :total="total" :current="pageNo" :page-size="pageSize" size="small"
                              @on-change="changePage"  @on-page-size-change="pageSizeChange" show-total
                              show-sizer></Page>
                    </div>
                </div>
            </Card>
        </Row>
        <a id="hrefToExportTable" style="postion: absolute;left: -10px;top: -10px;width: 0px;height: 0px;"></a>
    </div>
</template>

<script>
    import {resetWorkHeight, isEmpty, getUserCookie} from '@/libs/util.js';
    import {mapActions, mapState} from 'vuex';

    export default {
        name: 'comwarningList',
        data () {
            return {
                ruleValidate: {
                    creator: [
                        { pattern: /^.{1,50}$/, message: '操作人长度应在1-50之间', trigger: 'blur' }
                    ],
                    customname: [
                        { pattern: /^.{1,50}$/, message: '客户名称长度应在1-50之间', trigger: 'blur' }
                    ]
                },
                modal_loading: false,
                modal3: false,
                modal4: false,
                modal5: false,
                modal6: false,
                indicatorLogss: {
                    operationname: '',
                    operationid: '',
                    creator: '',
                    operationtype: ''
                },
                searchFormDate: {
                    chandlestate: '',
                    starDate: '',
                    endDate: '',
                    signallamp: '',
                    indId: '',
                    customname: '',
                    provcode: '',
                    creator: '',
                    eventstate: '',
                    pageInfo: {
                        pageSize: '10',
                        pageNo: '1'
                    }
                },
                showFlag: {
                    areaFlag: false
                },
                tableColumns: [
                    {
                        title: '指标名称',
                        align: 'center',
                        render: (h, params) => {
                            const row = params.row;
                            return h('div', [
                                h('div', row.indicators.indicatorname)
                            ]);
                        }
                    }, {
                        title: '指标日期',
                        key: 'bizdate',
                        align: 'center',
                        sortable: true
                    }, {
                        title: '预警日期',
                        align: 'center',
                        render: (h, params) => {
                            return h('div', new Date(params.row.alerttime).getFullYear() + '-' + (new Date(params.row.alerttime).getMonth() + 1) + '-' + new Date(params.row.alerttime).getDate());
                        }
                    }, {
                        title: '客户名称',
                        align: 'center',
                        key: 'customname'
                    }, {
                        title: '区域',
                        align: 'center',
                        key: 'areaname'
                    }, {
                        title: '预警信号',
                        align: 'center',
                        render: (h, params) => {
                            const row = params.row;
                            const type = row.signallamp === 'B' ? 'primary' : row.signallamp === 'G' ? 'success' : row.signallamp === 'Y' ? 'warning' : row.signallamp === 'R' ? 'error' : '';
                            const text = row.signallamp === 'B' ? '蓝' : row.signallamp === 'G' ? '绿' : row.signallamp === 'Y' ? '黄' : row.signallamp === 'R' ? '红' : '';
                            return h('Button', {
                                props: {
                                    type: type
                                },
                                on: {
                                    click: () => {
                                        let routerParam = {eventid: params.row.eventid};
                                        this.$router.push({
                                            name: 'warningAuditingTabList',
                                            query: routerParam
                                        });
                                    }
                                }
                            }, text);
                        }
                    }, {
                        title: '操作人',
                        align: 'center',
                        key: 'creator'
                    }, {
                        title: '操作时间',
                        align: 'center',
                        render: (h, params) => {
                            return h('div', new Date(params.row.createTime).getFullYear() + '-' + (new Date(params.row.createTime).getMonth() + 1) + '-' + new Date(params.row.createTime).getDate());
                        }
                    }, {
                        title: '当前状态',
                        align: 'center',
                        render: (h, params) => {
                            const row = params.row;
                            return h('div', [
                                h('div', row.handlestate === '1' ? '初始状态' : row.handlestate === '2' ? '沟通中' : row.handlestate === '3' ? '已回复' : row.handlestate === '4' ? '提交经理待审核' : row.handlestate === '5' ? '反馈待处理' : row.handlestate === '0' ? '取消预警' : row.handlestate === '6' ? '已撤回' : '')
                            ]);
                        }
                    }
                ],
                idArr: [],
                idArr1: [],
                idArr2: [],
                idArr3: []
            };
        },
        computed: {
            ...mapState({
                loading: ({interventionList}) => interventionList.loading,
                tableData: ({interventionList}) => interventionList.interventionList,
                pageNo: ({interventionList}) => interventionList.pageNo,
                pageSize: ({interventionList}) => interventionList.pageSize,
                total: ({interventionList}) => interventionList.total,
                pages: ({interventionList}) => interventionList.pages,
                zhiBiaoQueryList: ({comwarningList}) => comwarningList.zhiBiaoQueryList,
                quHuaQueryList: ({interventionList}) => interventionList.quHuaQueryList
            })
        },
        methods: {
            ...mapActions([
                'interventionQueryList',
                'chaXunZhiBiao',
                'chaXunGanYu',
                'chaXunQuHuaSto',
                'updateHandlestate',
                'comwarningIndicatorLogss',
                'interventionhandlestateQueryList',
                'selectByIndicatorname'
            ]),
            /**
             * 初始化
             */
            init () {
                this.chuShi();
                this.zhiBiaoClick();
                this.chaXunQuHua();
            },
            chuShi () {
                // const user = getUserCookie();
                // const roleCode = user.roleCodeList;
                // if (roleCode.indexOf('0009') >= 0) {
                //     this.searchFormDate.handlestate = '';
                //     this.searchFormDate.chandlestate = '2';
                //     this.showFlag.areaFlag = false;
                // } else {
                //     this.showFlag.areaFlag = true;
                //     this.searchFormDate.handlestate = '';
                //     this.searchFormDate.chandlestate = '1,2,3,4,5,6';
                // }
                this.searchFormDate.handlestate = '';
                this.searchFormDate.chandlestate = '3,4';
                this.interventionhandlestateQueryList(this.searchFormDate).then(res => {
                    resetWorkHeight();
                });
            },
            searchData () {
                this.searchFormDate.handlestate = '';
                this.interventionQueryList(this.searchFormDate).then(res => {
                    resetWorkHeight();
                    this.$Message.info('查询成功!');
                });
            }, /**
             * 点击查询按钮执行查询操作
             */
            chaXUN (name) {
                this.$refs[name].validate((valid) => {
                    if (valid) {
                        this.searchFormDate.handlestate = '';
                        this.searchFormDate.assvalue1 = '3,4';
                        this.chaXunGanYu(this.searchFormDate).then(res => {
                            resetWorkHeight();
                        });
                    } else {
                        this.$Message.error('亲！请输入符合标准的字段!');
                    }
                });
            }, /**
             * 改变开始时间格式
             */
            changestarDate (dateA) {
                if (dateA === '') {
                    this.searchFormDate.starDate = '';
                } else {
                    const dateee = new Date(dateA).toJSON();
                    const date = new Date(+new Date(dateee) + 8 * 3600 * 1000).toISOString().replace(/T/g, ' ').replace(/\.[\d]{3}Z/, '');
                    this.searchFormDate.starDate = date;
                }
            }, /**
             * 改变结束时间格式
             */
            changeendDate (dateA) {
                if (dateA === '') {
                    this.searchFormDate.endDate = '';
                } else {
                    const dateee = new Date(dateA).toJSON();
                    const date = new Date(+new Date(dateee) + 8 * 3600 * 1000).toISOString().replace(/T/g, ' ').replace(/\.[\d]{3}Z/, '');
                    this.searchFormDate.endDate = date;
                }
            },
            /**
             * 页面改变
             */
            changePage (index) {
                this.searchFormDate.pageInfo.pageNo = index;
                this.searchFormDate.handlestate = '';
                this.searchFormDate.assvalue1 = '3,4';
                this.chaXunGanYu(this.searchFormDate).then(res => {
                    resetWorkHeight();
                    this.$Message.info('查询成功!');
                    // this.searchFormDate.pageInfo.pageNo = 1;
                });
            },
            /**
             * 切换每页条数
             */
            pageSizeChange (newPageSize) {
                this.searchFormDate.pageInfo.pageSize = newPageSize;
                this.searchFormDate.handlestate = '';
                this.searchFormDate.assvalue1 = '3,4';
                this.chaXunGanYu(this.searchFormDate).then(res => {
                    resetWorkHeight();
                    this.$Message.info('查询成功!');
                });
            },
            /**
             * 重置按钮
             */
            cleanData () {
                window.location.reload();
            },
            zhiBiaoClick () {
                this.chaXunZhiBiao(this.searchFormDate).then(res => {
                    resetWorkHeight();
                });
            },
            chaXunQuHua () {
                this.chaXunQuHuaSto(this.searchFormDate).then(res => {
                    resetWorkHeight();
                });
            },
            searchName (name) {
                this.searchFormDate.indicatorname = name;
                this.selectByIndicatorname(this.searchFormDate.indicatorname).then(res => {
                    resetWorkHeight();
                });
            },
            cancleSubmit () {
                this.modal3 = false;
            },
            cancleSubmit2 () {
                this.modal4 = false;
            },
            cancleSubmit3 () {
                this.modal6 = false;
            },
            cancleSubmit1 () {
                this.modal5 = false;
            },
            a () {
                this.searchFormDate.starDate = null;
            },
            b () {
                this.searchFormDate.endDate = null;
            },
            selectionClick: function (arr) {
                var idArr = [];
                var idArr1 = [];
                var idArr2 = [];
                var idArr3 = [];
                if (!isEmpty(arr)) {
                    for (var i = 0; i < arr.length; i++) {
                        idArr.push(arr[i].eventid);
                        idArr1.push(arr[i].indId);
                        idArr2.push(arr[i].alerttime);
                        idArr3.push(arr[i].handlestate);
                    }
                }
                this.idArr = idArr;
                this.searchFormDate.eventid = idArr[0];
                this.indicatorLogss.eventid = this.searchFormDate.eventid;
                this.indicatorLogss.indId = idArr1[0];
                this.indicatorLogss.factdate = idArr2[0];
                this.indicatorLogss.zhuangtai = idArr3[0];
            }
        },
        mounted () {
            this.init();
        }
    }
    ;
</script>
