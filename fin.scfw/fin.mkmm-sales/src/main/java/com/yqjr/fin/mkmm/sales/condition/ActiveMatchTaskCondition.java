
package com.yqjr.fin.mkmm.sales.condition;

import org.hibernate.validator.constraints.Length;

import javax.validation.constraints.Digits;

import com.yqjr.scfw.common.condition.BaseCondition;

import com.yqjr.fin.mkmm.sales.entity.ActiveMatchTask;

public class ActiveMatchTaskCondition extends BaseCondition<ActiveMatchTask, Long> {

    //region generated by CodeRobot

    private static final long serialVersionUID = 1L;


    /**
     *
     *列表查询页面：/activeMatchTask/list
     *表单维护路径：/activeMatchTask/form
     *
     */

    /**
     * ID
     */
    @Digits(fraction =22,integer=0)
    private Long id;

    /**
     * 任务时间
     */
    private java.util.Date taskDate;

    /**
     * 活动编码
     */
    @Length(min = 0, max = 20)
    private String activeCode;

    /**
     * 活动名称
     */
    @Length(min = 0, max = 64)
    private String activeName;

    /**
     * 是否执行
     */
    @Length(min = 0, max = 20)
    private String isExecute;

    /**
     * 备注
     */
    @Length(min = 0, max = 500)
    private String remark;

    /**
     * 创建时间(数据提取时间)
     */
    private java.util.Date createTime;

    /**
     * 修改时间
     */
    private java.util.Date modifyTime;

    /**
     * 生效时间
     */
    private java.util.Date startTime;

    /**
     * 创建人
     */
    @Digits(fraction =22,integer=0)
    private Long creator;

    /**
     * 修改人
     */
    @Digits(fraction =22,integer=0)
    private Long modifier;

    /**
     * 有效标识（如表记录不删除，以此区分,0无效，1有效）
     */
    @Length(min = 0, max = 10)
    private String flag;

    /**
     * 类型(0 活动匹配任务1计划跟踪匹配任务)
     */
    @Digits(fraction =22,integer=0)
    private Long type;

    /**
     * 公司编码
     */
    @Length(min = 0, max = 20)
    private java.lang.String company;

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public java.util.Date getTaskDate() {
        return this.taskDate;
    }

    public void setTaskDate(java.util.Date taskDate) {
        this.taskDate = taskDate;
    }

    public String getActiveCode() {
        return this.activeCode;
    }

    public void setActiveCode(String activeCode) {
        this.activeCode = activeCode;
    }

    public String getActiveName() {
        return this.activeName;
    }

    public void setActiveName(String activeName) {
        this.activeName = activeName;
    }

    public String getIsExecute() {
        return this.isExecute;
    }

    public void setIsExecute(String isExecute) {
        this.isExecute = isExecute;
    }

    public String getRemark() {
        return this.remark;
    }

    public void setRemark(String remark) {
        this.remark = remark;
    }

    public java.util.Date getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(java.util.Date createTime) {
        this.createTime = createTime;
    }

    public java.util.Date getModifyTime() {
        return this.modifyTime;
    }

    public void setModifyTime(java.util.Date modifyTime) {
        this.modifyTime = modifyTime;
    }

    public java.util.Date getStartTime() {
        return this.startTime;
    }

    public void setStartTime(java.util.Date startTime) {
        this.startTime = startTime;
    }

    public Long getCreator() {
        return this.creator;
    }

    public void setCreator(Long creator) {
        this.creator = creator;
    }

    public Long getModifier() {
        return this.modifier;
    }

    public void setModifier(Long modifier) {
        this.modifier = modifier;
    }

    public String getFlag() {
        return this.flag;
    }

    public void setFlag(String flag) {
        this.flag = flag;
    }

    public Long getType() {
        return this.type;
    }

    public void setType(Long type) {
        this.type = type;
    }

    public java.lang.String getCompany() {
        return this.company;
    }

    public void setCompany(java.lang.String company) {
        this.company = company;
    }
    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    //~此线上方代码自动生成，在此下方编写自定义代码。
    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    //endregion
}