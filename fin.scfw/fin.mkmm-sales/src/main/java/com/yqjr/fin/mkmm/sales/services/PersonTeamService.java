package com.yqjr.fin.mkmm.sales.services;

import com.yqjr.fin.mkmm.sales.condition.PersonTeamCondition;
import com.yqjr.fin.mkmm.sales.mapper.PersonTeamMapper;
import com.yqjr.scfw.common.exception.ValidationException;
import com.yqjr.scfw.common.service.BaseService;
import com.yqjr.fin.mkmm.sales.entity.PersonTeam;
import com.yqjr.scfw.common.session.SessionHolder;
import com.yqjr.scfw.common.session.UserContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
@Transactional(readOnly = true)
public class PersonTeamService extends BaseService<PersonTeamMapper, PersonTeam, Long> {

    @Autowired
    private PersonTeamMapper personTeamMapper;
    //region generated by CodeRobot

    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // ~此线上方代码自动生成，在此下方编写自定义代码。
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    /**
     * 团队新增页面团队名称唯一性校验
     * @param searchPerson
     * @return
     * creat by liufang 2018/05/29
     */
    public String selectByCheckUniquen(String searchPerson){
        return personTeamMapper.selectByCheckUniquen(searchPerson);
    }

    /**
     * 根据人员代码更新人员团队表
     * @param personTeam
     * @return
     */
    public int patchByPersonCode(PersonTeam personTeam){
        return personTeamMapper.patchByPersonCode(personTeam);
    }
    //endregion


    /**
     * 根据人员代码查找
     * @param personCode
     * @return
     * creat by liufang 2018/06/19
     */
    public PersonTeam selectByPersonCode(String personCode){
        UserContext userContext = SessionHolder.getUserContext();
        String company = userContext.getComCode();
       return personTeamMapper.selectByPersonCode(personCode,company);
    }

    public void validatePersonNatureByTeamCode(String teamCode){
        UserContext uc = SessionHolder.getUserContext();
        String company =uc.getComCode();//通过token 获取公司代码
        PersonTeamCondition pt = new PersonTeamCondition();
        pt.setTeamCode(teamCode);
        pt.setCompany(company);
        pt.setPersonNature("0");
        int num = personTeamMapper.selectCount(pt);
        if (num != 0) {
            throw new ValidationException("团队编码为："+ teamCode + "已存在团队负责人！");
        }
    }

}