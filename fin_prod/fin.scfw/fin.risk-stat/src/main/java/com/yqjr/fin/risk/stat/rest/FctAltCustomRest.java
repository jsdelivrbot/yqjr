package com.yqjr.fin.risk.stat.rest;


import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.*;

import com.yqjr.fin.risk.stat.common.DateUtils;
import com.yqjr.fin.risk.stat.condition.FctAltCustomCondition;
import com.yqjr.fin.risk.stat.entity.FctAltCustom;
import com.yqjr.fin.risk.stat.services.FctAltCustomService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.yqjr.scfw.common.pagination.model.PageBounds;
import com.yqjr.scfw.common.model.pagination.PageInfo;
import com.yqjr.scfw.common.Const;
import com.yqjr.scfw.common.rest.BaseRest;
import com.yqjr.scfw.common.results.PageResultResponse;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

import com.yqjr.fin.risk.stat.common.JQGridJsonResult;

import javax.servlet.http.HttpServletResponse;


@Api(consumes = "application/json",
        produces = "application/json",
        protocols = "http",
        basePath = "fctAltCustoms")
@RestController
@RequestMapping(value = "/fctAltCustoms")
public class FctAltCustomRest extends BaseRest<FctAltCustomService, FctAltCustom> {

    //region generated by CodeRobot

    private Logger logger = LoggerFactory.getLogger(getClass());

    @ApiOperation(value = "分页查询客户预警事件（参数：实体对象属性、pageNum、pageSize）", tags = "客户预警事件信息：FctAltCustomRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNum", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/page", method = RequestMethod.GET)
    public PageResultResponse<FctAltCustom> page(
            @RequestParam(value = "pageNum", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = false, defaultValue = "10") Integer pageSize,
            FctAltCustomCondition condition) {

        List<FctAltCustom> list = baseService.selectList(condition, PageBounds.of(pageNum, pageSize));
        PageInfo<FctAltCustom> p = new PageInfo<>(list);
        return this.getPageResultResponse(Const.SUCCESS, Const.CODE_SUCCESS, null, p);

    }

    @ApiOperation(value = "分页查询客户预警事件信息（参数：实体对象属性、pageNum、pageSize）", tags = "客户预警事件信息：FctAltCustomRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNum", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/pageByJqGrid", method = RequestMethod.GET)
    public JQGridJsonResult<FctAltCustom> pageByJqGrid(
            @RequestParam(value = "pageNum", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
            FctAltCustomCondition condition) {
        List<FctAltCustom> list = baseService.selectList(condition, PageBounds.of(pageNum, pageSize));

        PageInfo<FctAltCustom> pageList = new PageInfo<>(list);
        JQGridJsonResult<FctAltCustom> jqGridJson = new JQGridJsonResult<>();
        jqGridJson.setPage(pageList.getPageNum());
        jqGridJson.setTotal(pageList.getPages());
        jqGridJson.setRecords(pageList.getTotal());
        jqGridJson.setRows(list);

        return jqGridJson;
    }


    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // ~此线上方代码自动生成，在此下方编写自定义代码。
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    @ApiOperation(value = "分页展示客户预警事件信息（参数：实体对象属性、pageNum、pageSize）", tags = "客户预警事件信息：FctAltCustomRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNum", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/selectFctAltCustomFenYe", method = RequestMethod.GET)
    public JQGridJsonResult<FctAltCustom> selectFctAltCustomFenYe(
            @RequestParam(value = "pageNum", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
            FctAltCustomCondition condition) {
        List<FctAltCustom> list = baseService.selectFctAltCustomFenYe(condition, PageBounds.of(pageNum, pageSize));
        PageInfo<FctAltCustom> pageList = new PageInfo<>(list);
        JQGridJsonResult<FctAltCustom> jqGridJson = new JQGridJsonResult<>();
        jqGridJson.setPage(pageList.getPageNum());
        jqGridJson.setTotal(pageList.getPages());
        jqGridJson.setRecords(pageList.getTotal());
        jqGridJson.setRows(list);

        return jqGridJson;
    }
    @ApiOperation(value = "分页查询客户预警事件信息（参数：实体对象属性、pageNum、pageSize）", tags = "客户预警事件信息：FctAltCustomRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNum", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/chaXunFctAltCustomFenYe", method = RequestMethod.POST)
    public JQGridJsonResult<FctAltCustom> chaXunFctAltCustomFenYe(
            @RequestParam(value = "pageNum", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
            FctAltCustomCondition condition) {

        List<FctAltCustom> list = baseService.chaXunFctAltCustomFenYe(condition, PageBounds.of(pageNum, pageSize));
        PageInfo<FctAltCustom> pageList = new PageInfo<>(list);
        JQGridJsonResult<FctAltCustom> jqGridJson = new JQGridJsonResult<>();
        jqGridJson.setPage(pageList.getPageNum());
        jqGridJson.setTotal(pageList.getPages());
        jqGridJson.setRecords(pageList.getTotal());
        jqGridJson.setRows(list);

        return jqGridJson;
    }
    @ApiOperation(value = "根据id查询分页查询客户预警事件信息（参数：实体对象属性、pageNum、pageSize）", tags = "客户预警事件信息：FctAltCustomRest")
    @RequestMapping(value = "/selectFctAltCustomByEventid", method = RequestMethod.GET)
        public JQGridJsonResult<FctAltCustom> selectFctAltCustomByEventid(FctAltCustom f) {
            List<FctAltCustom> list = baseService.selectFctAltCustomByEventid(f);
            PageInfo<FctAltCustom> pageList = new PageInfo<>(list);
            JQGridJsonResult<FctAltCustom> jqGridJson = new JQGridJsonResult<>();
            jqGridJson.setPage(pageList.getPageNum());
            jqGridJson.setTotal(pageList.getPages());
            jqGridJson.setRecords(pageList.getTotal());
            jqGridJson.setRows(list);
            return jqGridJson;
        }
    //endregion
    @ApiOperation(value = "查询下拉列表所需数据客户预警事件信息（参数：实体对象属性、pageNum、pageSize）", tags = "客户预警事件信息：FctAltCustomRest")
    @RequestMapping(value = "/selMany", method = RequestMethod.POST)
    public Map<String,List<FctAltCustom>> selMany(){
        return baseService.selMany();
    }

    //导出计划
    @RequestMapping(value="/fctAltCustomExport")
    public void fctAltCustomExport(FctAltCustomCondition condition, HttpServletResponse response) {
        try {
            baseService.fctAltCustomExport(condition,response);
        } catch (Exception e) {
            e.printStackTrace();
            logger.error("计划导出异常", e);
        }
    }
}