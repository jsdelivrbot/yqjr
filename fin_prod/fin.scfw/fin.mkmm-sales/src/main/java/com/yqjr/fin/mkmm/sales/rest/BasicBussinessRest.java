package com.yqjr.fin.mkmm.sales.rest;

import java.text.SimpleDateFormat;
import java.util.*;
import javax.validation.Valid;
import javax.validation.ValidationException;

import com.yqjr.fin.mkmm.sales.common.DateUtils;
import com.yqjr.fin.mkmm.sales.common.ResultMsg;
import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import com.yqjr.scfw.common.pagination.model.PageBounds;
import com.yqjr.scfw.common.model.pagination.PageInfo;
import com.yqjr.scfw.common.Const;
import com.yqjr.scfw.common.rest.BaseRest;
import com.yqjr.scfw.common.results.ObjectResultResponse;
import com.yqjr.scfw.common.results.PageResultResponse;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

import com.yqjr.fin.mkmm.sales.common.JQGridJsonResult;
import com.yqjr.fin.mkmm.sales.entity.BasicBussiness;
import com.yqjr.fin.mkmm.sales.condition.BasicBussinessCondition;
import com.yqjr.fin.mkmm.sales.services.BasicBussinessService;


@Api(consumes = "application/json",
        produces = "application/json",
        protocols = "http",
        basePath = "basicBussinesss")
@RestController
@RequestMapping(value = "/basicBussinesss")
public class BasicBussinessRest  {

    //region generated by CodeRobot

    private Logger logger = LoggerFactory.getLogger(getClass());

    //endregion
    @Autowired
    BasicBussinessService basicBussinessService;

    @ApiOperation(value = "处理业务系统数据", tags = "处理业务系统数据：PlanTrackRest")
    @RequestMapping(value = "/dataProcess" , method = RequestMethod.GET)
    public void dataProcess(@RequestParam("nowDate") String nowDate) {
       logger.info("--------开始处理业务数据--------"+nowDate);
       try{

           Date date = null;
           if(StringUtils.isBlank(nowDate)){
               Calendar calendar = Calendar.getInstance();
               calendar.setTime(new Date());
               calendar.add(Calendar.DATE, -1);
               date = calendar.getTime();
               SimpleDateFormat smt = new SimpleDateFormat("yyyy-MM-dd");
               String dateNow = smt.format(date);
               date = smt.parse(dateNow);
           }else{
               SimpleDateFormat simpledf=new SimpleDateFormat("yyyy-MM-dd");
               date = simpledf.parse(nowDate);
           }
           //处理业务数据 转换为BUSINESS数据
           basicBussinessService.transDataFormBussinessView(date);
       } catch (Exception e){
           logger.error("处理业务数据异常，message = " + e.getMessage(),e);
       }
        logger.info("--------完成处理业务数据--------"+nowDate);
    }

//    @ApiOperation(value = "构建活动匹配任务", tags = "活动主表：ActiveTimedTaskRest")
//    @RequestMapping(value = "/build")
//    public void buildActiveMatchTask(){
//        logger.info("buildActiveMatchTask start");
//        try {
//            activeTimedTaskService.buildActiveMatchTask();
//        }catch (Exception e){
//            logger.error("构建活动匹配任务异常，msg = " + e.getMessage(),e);
//        }
//        logger.info("buildActiveMatchTask end");
//    }

}