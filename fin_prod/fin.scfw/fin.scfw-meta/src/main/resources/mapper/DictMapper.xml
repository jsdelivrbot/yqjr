<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yqjr.fin.scfw.meta.mapper.DictMapper">

    <!-- region BaseMapper DO NOT MODIFY!!!  -->

    <sql id="Base_Table_Name">
        BD_DICT
    </sql>



    <!-- region BaseResultMap  -->
    <resultMap id="BaseResultMap" type="com.yqjr.fin.scfw.meta.entity.Dict">
        <result property="id" column="ID"/><!--主键-->
        <result property="name" column="NAME"/><!--字典名称-->
        <result property="code" column="CODE"/><!--字典编码-->
        <result property="description" column="DESCRIPTION"/><!--字典描述-->
        <result property="status" column="STATUS"/><!--状态：1有效，0无效-->
        <result property="parentId" column="PARENT_ID"/><!--父ID-->
        <result property="hasChild" column="HAS_CHILD"/><!--是否有子字典-->
        <result property="dictLevel" column="DICT_LEVEL"/><!--字典登记-->
        <result property="creator" column="CREATOR"/><!--创建人-->
        <result property="createTime" column="CREATE_TIME"/><!--创建时间-->
        <result property="modifier" column="MODIFIER"/><!--最后更新人-->
        <result property="modifyTime" column="MODIFY_TIME"/><!--最后更新时间-->
        <result property="remarks" column="REMARKS"/><!--备注-->
        <result property="delFlag" column="DEL_FLAG"/><!--删除标识-->
    </resultMap>
    <!-- endregion -->

    <!-- region Base_Column_List  -->
    <sql id="Base_Column_List">
    ID,NAME,CODE,DESCRIPTION,STATUS,PARENT_ID,HAS_CHILD,DICT_LEVEL,CREATOR,CREATE_TIME,MODIFIER,MODIFY_TIME,REMARKS,DEL_FLAG
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_List_Selective  -->
    <sql id="Base_Column_List_Selective">
        <trim suffixOverrides=",">
            <if test="id != null">
            ID,
            </if>
            <if test="name != null">
            NAME,
            </if>
            <if test="code != null">
            CODE,
            </if>
            <if test="description != null">
            DESCRIPTION,
            </if>
            <if test="status != null">
            STATUS,
            </if>
            <if test="parentId != null">
            PARENT_ID,
            </if>
            <if test="hasChild != null">
            HAS_CHILD,
            </if>
            <if test="dictLevel != null">
            DICT_LEVEL,
            </if>
            <if test="creator != null">
            CREATOR,
            </if>
            <if test="createTime != null">
            CREATE_TIME,
            </if>
            <if test="modifier != null">
            MODIFIER,
            </if>
            <if test="modifyTime != null">
            MODIFY_TIME,
            </if>
            <if test="remarks != null">
            REMARKS,
            </if>
            <if test="delFlag != null">
            DEL_FLAG
            </if>
        </trim>
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Values  -->
    <sql id="Base_Column_Values">
    #{id},
    #{name},
    #{code},
    #{description},
    #{status},
    #{parentId},
    #{hasChild},
    #{dictLevel},
    #{creator},
    #{createTime},
    #{modifier},
    #{modifyTime},
    #{remarks},
    #{delFlag}
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Values_Selective  -->
    <sql id="Base_Column_Values_Selective">
        <trim suffixOverrides=",">
            <if test="id != null">
            #{id},
            </if>
            <if test="name != null">
            #{name},
            </if>
            <if test="code != null">
            #{code},
            </if>
            <if test="description != null">
            #{description},
            </if>
            <if test="status != null">
            #{status},
            </if>
            <if test="parentId != null">
            #{parentId},
            </if>
            <if test="hasChild != null">
            #{hasChild},
            </if>
            <if test="dictLevel != null">
            #{dictLevel},
            </if>
            <if test="creator != null">
            #{creator},
            </if>
            <if test="createTime != null">
            #{createTime},
            </if>
            <if test="modifier != null">
            #{modifier},
            </if>
            <if test="modifyTime != null">
            #{modifyTime},
            </if>
            <if test="remarks != null">
            #{remarks},
            </if>
            <if test="delFlag != null">
            #{delFlag}
            </if>
        </trim>
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Set_Values  -->
    <sql id="Base_Column_Set_Values">
    ID = #{id},
    NAME = #{name},
    CODE = #{code},
    DESCRIPTION = #{description},
    STATUS = #{status},
    PARENT_ID = #{parentId},
    HAS_CHILD = #{hasChild},
    DICT_LEVEL = #{dictLevel},
    CREATOR = #{creator},
    CREATE_TIME = #{createTime},
    MODIFIER = #{modifier},
    MODIFY_TIME = #{modifyTime},
    REMARKS = #{remarks},
    DEL_FLAG = #{delFlag}
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Set_Values_Selective  -->
    <sql id="Base_Column_Set_Values_Selective">
        <if test="id != null">
        ID = #{id},
        </if>
        <if test="name != null">
        NAME = #{name},
        </if>
        <if test="code != null">
        CODE = #{code},
        </if>
        <if test="description != null">
        DESCRIPTION = #{description},
        </if>
        <if test="status != null">
        STATUS = #{status},
        </if>
        <if test="parentId != null">
        PARENT_ID = #{parentId},
        </if>
        <if test="hasChild != null">
        HAS_CHILD = #{hasChild},
        </if>
        <if test="dictLevel != null">
        DICT_LEVEL = #{dictLevel},
        </if>
        <if test="creator != null">
        CREATOR = #{creator},
        </if>
        <if test="createTime != null">
        CREATE_TIME = #{createTime},
        </if>
        <if test="modifier != null">
        MODIFIER = #{modifier},
        </if>
        <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime},
        </if>
        <if test="remarks != null">
        REMARKS = #{remarks},
        </if>
        <if test="delFlag != null">
        DEL_FLAG = #{delFlag}
        </if>
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Where_Selective  -->
    <sql id="Base_Column_Where_Selective">
        <if test="id != null">
            and ID = #{id}
        </if>
        <if test="name != null">
            and NAME = #{name}
        </if>
        <if test="code != null">
            and CODE = #{code}
        </if>
        <if test="description != null">
            and DESCRIPTION = #{description}
        </if>
        <if test="status != null">
            and STATUS = #{status}
        </if>
        <if test="parentId != null">
            and PARENT_ID = #{parentId}
        </if>
        <if test="hasChild != null">
            and HAS_CHILD = #{hasChild}
        </if>
        <if test="dictLevel != null">
            and DICT_LEVEL = #{dictLevel}
        </if>
        <if test="creator != null">
            and CREATOR = #{creator}
        </if>
        <if test="createTime != null">
            and CREATE_TIME = #{createTime}
        </if>
        <if test="modifier != null">
            and MODIFIER = #{modifier}
        </if>
        <if test="modifyTime != null">
            and MODIFY_TIME = #{modifyTime}
        </if>
        <if test="remarks != null">
            and REMARKS = #{remarks}
        </if>
        <if test="delFlag != null">
            and DEL_FLAG = #{delFlag}
        </if>
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Where_Selective_Param1  -->
    <sql id="Base_Column_Where_Selective_Param1">
        <if test="param1.id != null">
            and ID = #{param1.id}
        </if>
        <if test="param1.name != null">
            and NAME = #{param1.name}
        </if>
        <if test="param1.code != null">
            and CODE = #{param1.code}
        </if>
        <if test="param1.description != null">
            and DESCRIPTION = #{param1.description}
        </if>
        <if test="param1.status != null">
            and STATUS = #{param1.status}
        </if>
        <if test="param1.parentId != null">
            and PARENT_ID = #{param1.parentId}
        </if>
        <if test="param1.hasChild != null">
            and HAS_CHILD = #{param1.hasChild}
        </if>
        <if test="param1.dictLevel != null">
            and DICT_LEVEL = #{param1.dictLevel}
        </if>
        <if test="param1.creator != null">
            and CREATOR = #{param1.creator}
        </if>
        <if test="param1.createTime != null">
            and CREATE_TIME = #{param1.createTime}
        </if>
        <if test="param1.modifier != null">
            and MODIFIER = #{param1.modifier}
        </if>
        <if test="param1.modifyTime != null">
            and MODIFY_TIME = #{param1.modifyTime}
        </if>
        <if test="param1.remarks != null">
            and REMARKS = #{param1.remarks}
        </if>
        <if test="param1.delFlag != null">
            and DEL_FLAG = #{param1.delFlag}
        </if>
    </sql>
    <!-- endregion -->

    <!-- region Base_Order_By  -->
    <sql id="Base_Order_By">
        <bind name="propName" value="sortField"></bind>
        ORDER BY <include refid="Base_Column_Name" />
        <choose>
            <when test="isAscend">
                ASC
            </when>
            <otherwise>
                DESC
            </otherwise>
        </choose>
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Name  -->
    <sql id="Base_Column_Name">
        <if test='"id" == propName'>
        ID
        </if>
        <if test='"name" == propName'>
        NAME
        </if>
        <if test='"code" == propName'>
        CODE
        </if>
        <if test='"description" == propName'>
        DESCRIPTION
        </if>
        <if test='"status" == propName'>
        STATUS
        </if>
        <if test='"parentId" == propName'>
        PARENT_ID
        </if>
        <if test='"hasChild" == propName'>
        HAS_CHILD
        </if>
        <if test='"dictLevel" == propName'>
        DICT_LEVEL
        </if>
        <if test='"creator" == propName'>
        CREATOR
        </if>
        <if test='"createTime" == propName'>
        CREATE_TIME
        </if>
        <if test='"modifier" == propName'>
        MODIFIER
        </if>
        <if test='"modifyTime" == propName'>
        MODIFY_TIME
        </if>
        <if test='"remarks" == propName'>
        REMARKS
        </if>
        <if test='"delFlag" == propName'>
        DEL_FLAG
        </if>
    </sql>
    <!-- endregion -->

    <!-- region Base_Id_Array  -->
    <sql id="Base_Id_Array">
        <foreach collection="array" open="(" close=")" separator="," item="id">
        #{id}
        </foreach>
    </sql>
    <!-- endregion -->

    <!-- region Base_Id_List  -->
    <sql id="Base_Id_List">
        <foreach collection="list" open="(" close=")" separator="," item="id">
        #{id}
        </foreach>
    </sql>
    <!-- endregion -->

    <!-- region Base_Select_All  -->
    <sql id="Base_Select_All">
        select
        <include refid="Base_Column_List" />
        from <include refid="Base_Table_Name" />
    </sql>
    <!-- endregion -->

    <!-- region selectById  -->
    <select id="selectById" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        where ID = #{id}
    </select>
    <!-- endregion -->

    <!-- region selectByIds  -->
    <select id="selectByIds" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        where ID in
        <include refid="Base_Id_List" />
    </select>
    <!-- endregion -->

    <!-- region selectAll  -->
    <select id="selectAll" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
    </select>
    <!-- endregion -->

    <!-- region selectCount  -->
    <select id="selectCount" resultType="int">
        select count(*)
        from <include refid="Base_Table_Name" />
        <where>
            <include refid="Base_Column_Where_Selective" />
        </where>
    </select>
    <!-- endregion -->

    <!-- region select  -->
    <select id="select" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        <where>
            <include refid="Base_Column_Where_Selective" />
        </where>
    </select>
    <!-- endregion -->

    <!-- region selectOne  -->
    <select id="selectOne" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        <where>
            <include refid="Base_Column_Where_Selective" />
        </where>
    </select>
    <!-- endregion -->

    <!-- region selectOrderBy  -->
    <select id="selectOrderBy" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        <where>
            <include refid="Base_Column_Where_Selective_Param1" />
        </where>
        <include refid="Base_Order_By" />
    </select>
    <!-- endregion -->

    <!-- region selectByProperty  -->
    <select id="selectByProperty" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        <where>
            <include refid="Base_Column_Name" /> = #{propValue}
        </where>
    </select>
    <!-- endregion -->

    <!-- region selectByPropertyIn  -->
    <select id="selectByPropertyIn" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        <where>
            <include refid="Base_Column_Name" /> IN
            <foreach collection="propValues" open="(" close=")" separator="," item="propValue">
            #{propValue}
            </foreach>
        </where>
    </select>
    <!-- endregion -->

    <!-- region delete  -->
    <delete id="delete">
        delete
        from <include refid="Base_Table_Name" />
        <where>
            <include refid="Base_Column_Where_Selective" />
        </where>
    </delete>
    <!-- endregion -->

    <!-- region deleteById  -->
    <delete id="deleteById">
        delete
        from <include refid="Base_Table_Name" />
        where ID = #{id}
    </delete>
    <!-- endregion -->

    <!-- region deleteByIds  -->
    <delete id="deleteByIds">
        delete
        from <include refid="Base_Table_Name" />
        where ID in
        <include refid="Base_Id_List" />
    </delete>
    <!-- endregion -->

    <!-- region insert  -->
    <insert id="insert" parameterType="com.yqjr.fin.scfw.meta.entity.Dict">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into <include refid="Base_Table_Name" /> (
        <include refid="Base_Column_List" />
        )
        values (
        <include refid="Base_Column_Values" />
        )
    </insert>
    <!-- endregion -->

    <!-- region updateById  -->
    <update id="updateById" parameterType="com.yqjr.fin.scfw.meta.entity.Dict">
        update <include refid="Base_Table_Name" />
        <set>
            <include refid="Base_Column_Set_Values" />
        </set>
        where ID = #{id}
    </update>
    <!-- endregion -->

    <!-- region patchById  -->
    <update id="patchById" parameterType="com.yqjr.fin.scfw.meta.entity.Dict">
        update <include refid="Base_Table_Name" />
        <set>
            <include refid="Base_Column_Set_Values_Selective" />
        </set>
        where ID = #{id}
    </update>
    <!-- endregion -->

    <!-- endregion BaseMapper -->

    <!-- region generated by CodeRobot  -->

    <!-- region 结果集映射  -->
    <resultMap id="DictResult" type="com.yqjr.fin.scfw.meta.entity.Dict">
        <result property="id" column="ID"/><!--主键-->
        <result property="name" column="NAME"/><!--字典名称-->
        <result property="code" column="CODE"/><!--字典编码-->
        <result property="description" column="DESCRIPTION"/><!--字典描述-->
        <result property="status" column="STATUS"/><!--状态：1有效，0无效-->
        <result property="parentId" column="PARENT_ID"/><!--父ID-->
        <result property="hasChild" column="HAS_CHILD"/><!--是否有子字典-->
        <result property="dictLevel" column="DICT_LEVEL"/><!--字典登记-->
        <result property="creator" column="CREATOR"/><!--创建人-->
        <result property="createTime" column="CREATE_TIME"/><!--创建时间-->
        <result property="modifier" column="MODIFIER"/><!--最后更新人-->
        <result property="modifyTime" column="MODIFY_TIME"/><!--最后更新时间-->
        <result property="remarks" column="REMARKS"/><!--备注-->
        <result property="delFlag" column="DEL_FLAG"/><!--删除标识-->
    </resultMap>
    <!-- endregion -->

    <!-- 查询条件判断 入参为对象 条件为模糊-->
    <sql id="queryLikeDict">
        <if test="dict!=null">
            <if test="id!=null and id!=''">
                AND ID LIKE CONCAT('%'#{id}'%')<!--主键-->
            </if>
            <if test="name!=null and name!=''">
                AND NAME LIKE CONCAT('%'#{name}'%')<!--字典名称-->
            </if>
            <if test="code!=null and code!=''">
                AND CODE LIKE CONCAT('%'#{code}'%')<!--字典编码-->
            </if>
            <if test="description!=null and description!=''">
                AND DESCRIPTION LIKE CONCAT('%'#{description}'%')<!--字典描述-->
            </if>
            <if test="status!=null and status!=''">
                AND STATUS LIKE CONCAT('%'#{status}'%')<!--状态：1有效，0无效-->
            </if>
            <if test="parentId!=null and parentId!=''">
                AND PARENT_ID LIKE CONCAT('%'#{parentId}'%')<!--父ID-->
            </if>
            <if test="hasChild!=null and hasChild!=''">
                AND HAS_CHILD LIKE CONCAT('%'#{hasChild}'%')<!--是否有子字典-->
            </if>
            <if test="dictLevel!=null and dictLevel!=''">
                AND DICT_LEVEL LIKE CONCAT('%'#{dictLevel}'%')<!--字典登记-->
            </if>
            <if test="creator!=null and creator!=''">
                AND CREATOR LIKE CONCAT('%'#{creator}'%')<!--创建人-->
            </if>
            <if test="createTime!=null and createTime!=''">
                AND CREATE_TIME LIKE CONCAT('%'#{createTime}'%')<!--创建时间-->
            </if>
            <if test="modifier!=null and modifier!=''">
                AND MODIFIER LIKE CONCAT('%'#{modifier}'%')<!--最后更新人-->
            </if>
            <if test="modifyTime!=null and modifyTime!=''">
                AND MODIFY_TIME LIKE CONCAT('%'#{modifyTime}'%')<!--最后更新时间-->
            </if>
            <if test="remarks!=null and remarks!=''">
                AND REMARKS LIKE CONCAT('%'#{remarks}'%')<!--备注-->
            </if>
            <if test="delFlag!=null and delFlag!=''">
                DEL_FLAG LIKE CONCAT('%'#{delFlag}'%')<!--删除标识-->
            </if>
        </if>
    </sql>

    <!-- 按条件模糊查询所有 -->
    <select id="queryDictList" parameterType="com.yqjr.fin.scfw.meta.entity.Dict"
            resultMap="DictResult">
        SELECT
        ID,<!--主键-->
        NAME,<!--字典名称-->
        CODE,<!--字典编码-->
        DESCRIPTION,<!--字典描述-->
        STATUS,<!--状态：1有效，0无效-->
        PARENT_ID,<!--父ID-->
        HAS_CHILD,<!--是否有子字典-->
        DICT_LEVEL,<!--字典登记-->
        CREATOR,<!--创建人-->
        CREATE_TIME,<!--创建时间-->
        MODIFIER,<!--最后更新人-->
        MODIFY_TIME,<!--最后更新时间-->
        REMARKS,<!--备注-->
        DEL_FLAG<!--删除标识-->
        FROM BD_DICT
        <where>
            <include refid="queryLikeDict"/>
        </where>
    </select>

    <!-- 按条件模糊统计所有条数 -->
    <select id="queryDictCount" parameterType="com.yqjr.fin.scfw.meta.entity.Dict" resultType="int">
        SELECT
        count (id)
        FROM BD_DICT
        <where>
            <include refid="queryLikeDict"/>
        </where>
    </select>

    <!-- 批量删除，入参为数组  -->
    <delete id="dynamicDelete">
        delete from BD_DICT where id in
        <foreach collection="array" open="(" close=")" separator="," item="arr">
            #{arr}
        </foreach>
    </delete>

    <!-- 批量删除，入参为list  -->
    <delete id="dynamicDeleteList">
        delete from BD_DICT where id in
        <foreach collection="list" open="(" close=")" separator="," item="ids">
            #{ids}
        </foreach>
    </delete>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="java.util.List">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into BD_DICT
        (
        <include refid="Base_Column_List" />
        )
        values
        <foreach collection="list" item="dict" index="index" separator=",">
            (
            <include refid="Base_Column_Values" />
            )
        </foreach>
    </insert>

    <!-- 插入单条数据，并返回主键ID -->
    <insert id="saveObj" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.yqjr.fin.scfw.meta.entity.Dict">
        insert into BD_DICT
        (
        <include refid="Base_Column_List" />
        )
        values
        (
        <include refid="Base_Column_Values" />
        )
    </insert>


    <!-- **********************************************************************-->
    <!-- ************* 在此下方为一对一、一对多查询方式 仅供参考***************-->
    <!-- **********************************************************************-->
    <!-- 一个博客（BlogInfo） 属于一个作者（Author） ，一个作者（Author） 有多篇文章（Post） -->
    <!--
  <resultMap type="com.foo.bean.BlogInfo" id="BlogInfo">
      <id column="blog_id" property="blogId" />
      <result column="title" property="title" />
      <association property="author" column="blog_author_id"
          javaType="com.foo.bean.Author" select="com.foo.bean.AuthorMapper.selectByPrimaryKey">
      </association>
      <collection property="posts" column="blog_id" ofType="com.foo.bean.Post"
          select="com.foo.bean.PostMapper.selectByBlogId">
      </collection>
  </resultMap>

  <select id="queryBlogInfoById" resultMap="BlogInfo" parameterType="java.math.BigDecimal">
      SELECT
      B.BLOG_ID,
      B.TITLE,
      B.AUTHOR_ID AS BLOG_AUTHOR_ID
      FROM BLOG B
      where B.BLOG_ID = 博客ID
  </select>

          上述方法存在N+1问题
      它的弊端也比较明显：即所谓的N+1问题。关联的嵌套查询显示得到一个结果集，然后根据这个结果集的每一条记录进行关联查询。
      现在假设嵌套查询就一个（即resultMap 内部就一个association标签），现查询的结果集返回条数为N，那么关联查询语句将会被执行N次，加上自身返回结果集查询1次，共需要访问数据库N+1次。如果N比较大的话，这样的数据库访问消耗是非常大的！所以使用这种嵌套语句查询的使用者一定要考虑慎重考虑，确保N值不会很大。
      以上面的例子为例，select 语句本身会返回com.foo.bean.BlogMapper.queryBlogInfoById 条数为1 的结果集，由于它有两条关联的语句查询，它需要共访问数据库 1*（1+1）=3次数据库。


       <resultMap type="com.foo.bean.BlogInfo" id="BlogInfo">
      <id column="blog_id" property="blogId"/>
      <result column="title" property="title"/>
      <association property="author" column="blog_author_id" javaType="com.foo.bean.Author">
          <id column="author_id" property="authorId"/>
          <result column="user_name" property="userName"/>
          <result column="password" property="password"/>
          <result column="email" property="email"/>
          <result column="biography" property="biography"/>
      </association>
      <collection property="posts" column="blog_post_id" ofType="com.foo.bean.Post">
          <id column="post_id" property="postId"/>
          <result column="blog_id" property="blogId"/>
          <result column="create_time" property="createTime"/>
          <result column="subject" property="subject"/>
          <result column="body" property="body"/>
          <result column="draft" property="draft"/>
      </collection>
      </resultMap>


      <select id="queryAllBlogInfo" resultMap="BlogInfo">
          SELECT
           B.BLOG_ID,
           B.TITLE,
           B.AUTHOR_ID AS BLOG_AUTHOR_ID,
           A.AUTHOR_ID,
           A.USER_NAME,
           A.PASSWORD,
           A.EMAIL,
           A.BIOGRAPHY,
           P.POST_ID,
           P.BLOG_ID AS BLOG_POST_ID ,
             P.CREATE_TIME,
           P.SUBJECT,
           P.BODY,
           P.DRAFT
      FROM BLOG B
      LEFT OUTER JOIN AUTHOR A
        ON B.AUTHOR_ID = A.AUTHOR_ID
      LEFT OUTER JOIN POST P
        ON P.BLOG_ID = B.BLOG_ID
      </select>
      -->

    <!-- **********************************************************************-->
    <!-- ************* 此线上方代码自动生成，在此下方编写自定义代码。***************-->
    <!-- **********************************************************************-->

    <!-- endregion -->


</mapper>

