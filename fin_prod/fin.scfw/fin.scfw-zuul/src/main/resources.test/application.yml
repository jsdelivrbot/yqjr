spring:
  redis:
    cluster:
      nodes: 10.20.133.85:7000, 10.20.133.85:7002, 10.20.133.85:7003, 10.20.133.85:7004, 10.20.133.85:7005

management:
  security:
    enabled: false
endpoints:
  shutdown:
    enabled: true
zuul:
  retryable: true
  #ribbon:
  #  eager-load:
  #    enabled: true
  sensitiveHeaders:
  ignoredServices: '*'
  routes:
    fin-scfw-auth:
      path: /auth/**
      serviceId: fin-scfw-auth
    fin-scfw-meta:
      path: /meta/**
      serviceId: fin-scfw-meta
    fin-ui:
      path: /ui/**
      serviceId: fin-ui
    fin-mkmm-ui:
      path: /mkmm/ui/**
      serviceId: fin-mkmm-ui
    fin-mkmm-sales:
      path: /mkmm/sales/**
      serviceId: fin-mkmm-sales
    fin-scfw-isomer:
      path: /isomer/**
      serviceId: fin-scfw-isomer
    fin-risk-stat:
      path: /risk/stat/**
      serviceId: fin-risk-stat
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: false
        isolation:
          thread:
            timeoutInMilliseconds: 30000 #缺省为1000
    #fin-scfw-auth:
    # execution:
    #  isolation:
    #   thread:
    #    timeoutInMilliseconds: 30000
ribbon:
  ReadTimeout: 30000
  ConnectTimeout: 30000
feign:
  httpclient:
    connection-timeout: 30000

fin-scfw-auth:
  ribbon:
    NFLoadBalancerRuleClassName: com.yqjr.fin.scfw.zuul.loadbalancer.BackToSelfRule
fin-scfw-meta:
  ribbon:
    NFLoadBalancerRuleClassName: com.yqjr.fin.scfw.zuul.loadbalancer.BackToSelfRule
fin-ui:
  ribbon:
    NFLoadBalancerRuleClassName: com.yqjr.fin.scfw.zuul.loadbalancer.BackToSelfRule
fin-mkmm-ui:
  ribbon:
    NFLoadBalancerRuleClassName: com.yqjr.fin.scfw.zuul.loadbalancer.BackToSelfRule
fin-mkmm-sales:
  ribbon:
    NFLoadBalancerRuleClassName: com.yqjr.fin.scfw.zuul.loadbalancer.BackToSelfRule
fin-scfw-isomer:
  ribbon:
    NFLoadBalancerRuleClassName: com.yqjr.fin.scfw.zuul.loadbalancer.BackToSelfRule
fin-risk-stat:
   ribbon:
     NFLoadBalancerRuleClassName: com.yqjr.fin.scfw.zuul.loadbalancer.BackToSelfRule