package com.yqjr.fin.mkmm.sales.rest;

import java.util.*;

import com.yqjr.fin.mkmm.sales.common.ResultMsg;
import com.yqjr.fin.mkmm.sales.rest.vo.JxsSelect;
import com.yqjr.fin.mkmm.sales.rest.vo.MaterialOutVo;
import com.yqjr.scfw.common.exception.ValidationException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.yqjr.scfw.common.pagination.model.PageBounds;
import com.yqjr.scfw.common.model.pagination.PageInfo;
import com.yqjr.scfw.common.Const;
import com.yqjr.scfw.common.rest.BaseRest;
import com.yqjr.scfw.common.results.ObjectResultResponse;
import com.yqjr.scfw.common.results.PageResultResponse;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import com.yqjr.fin.mkmm.sales.common.JQGridJsonResult;
import com.yqjr.fin.mkmm.sales.entity.MaterialOut;
import com.yqjr.fin.mkmm.sales.condition.MaterialOutCondition;
import com.yqjr.fin.mkmm.sales.services.MaterialOutService;


@Api(consumes = "application/json",
        produces = "application/json",
        protocols = "http",
        basePath = "materialOuts")
@RestController
@RequestMapping(value = "/materialOuts")
public class MaterialOutRest extends BaseRest<MaterialOutService, MaterialOut> {


    @Autowired
    MaterialOutService materialOutService;
    private Logger logger = LoggerFactory.getLogger(getClass());

    @ApiOperation(value = "分页查询素材推送表（参数：实体对象属性、pageNum、pageSize）", tags = "素材推送表信息：MaterialOutRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/page", method = RequestMethod.GET)
    public PageResultResponse<MaterialOut> page(
            @RequestParam(value = "pageNo", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = false, defaultValue = "10") Integer pageSize,
            MaterialOutCondition condition) {

        List<MaterialOut> list = baseService.selectList(condition, PageBounds.of(pageNum, pageSize));
        PageInfo<MaterialOut> p = new PageInfo<>(list);
        return this.getPageResultResponse(Const.SUCCESS, Const.CODE_SUCCESS, null, p);

    }

    @ApiOperation(value = "分页查询素材推送表信息（参数：实体对象属性、pageNum、pageSize）", tags = "素材推送表信息：MaterialOutRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/pageByJqGrid", method = RequestMethod.GET)
    public JQGridJsonResult<MaterialOut> pageByJqGrid(
            @RequestParam(value = "pageNo", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
            MaterialOutCondition condition) {
        List<MaterialOut> list = baseService.selectList(condition, PageBounds.of(pageNum, pageSize));

        PageInfo<MaterialOut> pageList = new PageInfo<>(list);
        JQGridJsonResult<MaterialOut> jqGridJson = new JQGridJsonResult<>();
        jqGridJson.setPage(pageList.getPageNum());
        jqGridJson.setTotal(pageList.getPages());
        jqGridJson.setRecords(pageList.getTotal());
        jqGridJson.setRows(list);

        return jqGridJson;
    }

    /**
     * 销管二期
     * 推送信息保存
     * create by lf
     * 2018/9/4
     * @param condition
     * @return
     */
    @ApiOperation(value = "素材推送信息", tags = "素材推送表信息：MaterialOutRest")
    @RequestMapping(value = "/MaterialOutToSave", method = RequestMethod.POST)
    public ObjectResultResponse<MaterialOut> MaterialOutToSave(MaterialOutVo condition) {
        try{
            materialOutService.insertToMaterialOut(condition);
            return this.getObjectResultResponse(Const.SUCCESS,Const.CODE_SUCCESS,Const.MSG_ADD_SUCCESS,null);
        }catch(ValidationException e){
            e.printStackTrace();
            return this.getObjectResultResponse(Const.FAILURE,Const.CODE_SUCCESS,"操作失败",null);
        }catch(Exception e){
            e.printStackTrace();
            return this.getObjectResultResponse(Const.FAILURE,Const.CODE_FAILURE,Const.SYSTEM_ERROR,null);
        }
    }

    /**
     * 销管二期
     * 素材推送信息详情查看
     * create by lf
     * 2018/9/4
     * @param id
     * @return
     */
    @ApiOperation(value = "素材推送信息", tags = "素材推送表信息：MaterialOutRest")
    @RequestMapping(value = "/selectOutMesById", method = RequestMethod.GET)
    public ResultMsg<MaterialOutVo> selectOutMesById(@RequestParam(value="id", required = true) Long id) {
        try{
            MaterialOutVo materialOutVo = materialOutService.selectOutMesById(id);
            return new ResultMsg<MaterialOutVo>(Const.CODE_SUCCESS,Const.MSG_CHECK_SUCCESS,Const.SUCCESS,materialOutVo);
        }catch(ValidationException e){
            e.printStackTrace();
            return new ResultMsg<MaterialOutVo>(Const.CODE_SUCCESS,"操作失败",Const.FAILURE,null);
        }catch(Exception e){
            e.printStackTrace();
            return new ResultMsg<MaterialOutVo>(Const.CODE_FAILURE,Const.SYSTEM_ERROR,Const.FAILURE,null);
        }
    }

}