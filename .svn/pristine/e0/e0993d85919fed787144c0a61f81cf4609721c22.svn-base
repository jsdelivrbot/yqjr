package com.yqjr.fin.mkmm.sales.rest;

import java.math.BigDecimal;
import java.util.*;

import com.yqjr.fin.mkmm.sales.common.ResultMsg;
import com.yqjr.fin.mkmm.sales.common.UserRoleHelp;
import com.yqjr.fin.mkmm.sales.condition.FeeMainWorkCondition;
import com.yqjr.fin.mkmm.sales.entity.PersonMainReview;
import com.yqjr.fin.mkmm.sales.entity.TeamReview;
import com.yqjr.fin.mkmm.sales.model.Active;
import com.yqjr.fin.mkmm.sales.model.FeeReviewWork;
import com.yqjr.fin.mkmm.sales.model.TeamReviewWork;
import com.yqjr.fin.mkmm.sales.rest.vo.fee.FeeMainReviewQueryVo;
import com.yqjr.fin.mkmm.sales.rest.vo.fee.FeeMainReviewWorkVo;
import com.yqjr.fin.mkmm.sales.rest.vo.fee.FeeStartCostVo;
import com.yqjr.fin.mkmm.sales.services.ActiveService;
import com.yqjr.scfw.common.exception.ValidationException;
import com.yqjr.scfw.common.session.SessionHolder;
import com.yqjr.scfw.common.session.UserContext;
import org.apache.http.HttpRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import com.yqjr.scfw.common.pagination.model.PageBounds;
import com.yqjr.scfw.common.model.pagination.PageInfo;
import com.yqjr.scfw.common.Const;
import com.yqjr.scfw.common.rest.BaseRest;
import com.yqjr.scfw.common.results.ObjectResultResponse;
import com.yqjr.scfw.common.results.PageResultResponse;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

import com.yqjr.fin.mkmm.sales.common.JQGridJsonResult;
import com.yqjr.fin.mkmm.sales.entity.FeeMainReview;
import com.yqjr.fin.mkmm.sales.condition.FeeMainReviewCondition;
import com.yqjr.fin.mkmm.sales.services.FeeMainReviewService;


@Api(consumes = "application/json",
        produces = "application/json",
        protocols = "http",
        basePath = "feeMainReviews")
@RestController
@RequestMapping(value = "/feeMainReviews")
public class FeeMainReviewRest extends BaseRest<FeeMainReviewService, FeeMainReview> {

    //region generated by CodeRobot
    @Autowired
    private ActiveService activeService;
    @Autowired
    private FeeMainReviewService feeMainReviewService;

    private Logger logger = LoggerFactory.getLogger(getClass());

    @ApiOperation(value = "分页查询费用审核表（参数：实体对象属性、pageNum、pageSize）", tags = "费用审核表信息：FeeMainReviewRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/page", method = RequestMethod.GET)
    public PageResultResponse<FeeMainReview> page(
            @RequestParam(value = "pageNo", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = false, defaultValue = "10") Integer pageSize,
            FeeMainReviewCondition condition) {

            List<FeeMainReview> list = baseService.selectList(condition, PageBounds.of(pageNum, pageSize));
            PageInfo<FeeMainReview> p = new PageInfo<>(list);
            return this.getPageResultResponse(Const.SUCCESS, Const.CODE_SUCCESS, null, p);
    }


    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // ~此线上方代码自动生成，在此下方编写自定义代码。
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    //endregion
    /**
     * 审核详细页面-->操作   费用审核
     * create by fanna 20180605
     * @param
     * @return
     */
    @RequestMapping(value = "/feeMainReviewView", method = RequestMethod.GET)
    @ResponseBody
    public ResultMsg selectActiveByCode(@RequestParam(value = "businessCode") String businessCode) {
        try{
            UserContext userContext=SessionHolder.getUserContext();
            String company = userContext.getComCode();//公司
            Active active = feeMainReviewService.selectActiveByCode(businessCode,company);
            return new ResultMsg(Const.MSG_ADD_SUCCESS, Const.CODE_SUCCESS,Const.SUCCESS ,active);
        } catch (ValidationException e) {
            e.printStackTrace();
            return new ResultMsg(Const.MSG_ADD_FAILURE, e.getMessage() ,Const.FAILURE ,null);
        } catch (Exception e) {
            logger.error("Exception异常", e);
            return new ResultMsg(Const.MSG_ADD_FAILURE, Const.SYSTEM_ERROR,Const.FAILURE ,null);
        }
    }

    /**
     * 审核详细页面提交  --提交审核
     * @param
     * @param
     * @return
     */
    @RequestMapping(value = "/feeMainReviewAduitAdd", method = RequestMethod.PATCH)
    @ResponseBody
    public ResultMsg feeMainReviewAduitAdd(@RequestParam("businessCode") String businessCode,
                                           @RequestBody FeeReviewWork feeReviewWork) {
        try{
            UserContext userContext=SessionHolder.getUserContext();
            String company = userContext.getComCode();//公司
            List<FeeMainReview> feeMainReviews = feeMainReviewService.selectFeeMainReviewByCode(businessCode,company);

            Long id = feeMainReviews.get(0).getId();
            Long workFlowId = feeMainReviews.get(0).getFlowId();
            String level = UserRoleHelp.getReviewLevel();//审核等级
            String name = userContext.getName();
            logger.info("审核费用上行参数："+id+","+workFlowId+","+feeReviewWork.getReviewStatus()+","+feeReviewWork.getOpinion());
            feeMainReviewService.feeMainAuditAdd(id,workFlowId,feeReviewWork.getReviewStatus(),feeReviewWork.getOpinion(),level,name);

            return new ResultMsg<PersonMainReview>(Const.CODE_SUCCESS, "审核成功",Const.SUCCESS,  null);
        } catch (ValidationException e) {
            e.printStackTrace();
            return new ResultMsg(Const.MSG_ADD_FAILURE, e.getMessage() ,Const.FAILURE ,null);
        } catch (Exception e) {
            logger.error("Exception异常", e);
            return new ResultMsg(Const.MSG_ADD_FAILURE, Const.SYSTEM_ERROR,Const.FAILURE ,null);
        }

    }

    /**
     * 费用结算单发起 保存审核表 进行审核  ---活动费用发起动支
     * add by xiaoyao 20180530
     * @param
     * @param
     * @return
     */
    @ApiOperation(value = "新增记录（参数：实体对象属性）", tags = "基础删改查：继承自BaseRest")
    @RequestMapping(value = "/feeMainReviewAdd", method = RequestMethod.PATCH)
    @ResponseBody
    public ObjectResultResponse<FeeMainReview> feeMainReviewAdd(@RequestParam("businessCode") String businessCode,
                                                                @RequestBody Active active) {

        UserContext userContext=SessionHolder.getUserContext();
        String company = userContext.getComCode();//公司
        try {
            feeMainReviewService.feeMainReviewAdd(company,active.getBillFee(),active.getRemark2(),businessCode);
            return this.getObjectResultResponse(Const.SUCCESS, Const.CODE_SUCCESS, Const.MSG_SUBMIT_SUCCESS+"!,创建活动费用申请成功，进入审核流程！", null);
        }  catch (ValidationException e) {
            e.printStackTrace();
            return this.getObjectResultResponse(Const.FAILURE, e.getMessage() ,Const.MSG_ADD_FAILURE ,null);
        } catch (Exception e) {
            logger.error("Exception异常", e);
            return this.getObjectResultResponse(Const.FAILURE, Const.SYSTEM_ERROR,Const.MSG_ADD_FAILURE ,null);
        }



    }


    /**
     * 审核列表展示页面
     * @param pageNum
     * @param pageSize
     * @param sord
     * @param condition
     * @return
     */
    @ApiOperation(value = "分页查询费用审核表信息（参数：实体对象属性、pageNum、pageSize）", tags = "费用审核表信息：FeeMainReviewRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/pageByJqGrid", method = RequestMethod.GET)
    public JQGridJsonResult<FeeMainReviewWorkVo> pageByJqGrid(
            @RequestParam(value = "pageNo", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
            @RequestParam(value = "sord", required = true) String sord,
            FeeMainWorkCondition condition) {

        condition.setModType("04");//费用
        UserContext userContext = SessionHolder.getUserContext();
        //判断人员权限，管理员不受区域和审核级别限制
        if (UserRoleHelp.isAdmin()){
            condition.setReviewLevel(null);
            condition.setAreaCode(null);
            condition.setFounderLevel(null);
        }else {
            if (UserRoleHelp.isMarketingManager()){
                condition.setAreaCode(null);
                condition.setReviewLevel("2");
                condition.setFounderLevel(null);
            }else if (UserRoleHelp.isMarketingWorkers()){
                condition.setAreaCode(null);
                condition.setReviewLevel("1");
                condition.setFounderLevel("03");
            }else if (UserRoleHelp.isRegionalLeaders()) {
                condition.setAreaCode(userContext.getAreaCode());
                condition.setReviewLevel("1");
                condition.setFounderLevel("02");
            }else {
                condition.setAreaCode(userContext.getAreaCode());
                condition.setReviewLevel("0");
            }
        }
        String company = userContext.getComCode();//公司
        condition.setCompany(company);
        List<FeeMainReviewWorkVo> list = feeMainReviewService.selectReviewList(condition, PageBounds.of(pageNum, pageSize));

        PageInfo<FeeMainReviewWorkVo> pageList = new PageInfo<>(list);
        JQGridJsonResult<FeeMainReviewWorkVo> jqGridJson = new JQGridJsonResult<>();
        jqGridJson.setPage(pageList.getPageNum());
        jqGridJson.setTotal(pageList.getPages());
        jqGridJson.setRecords(pageList.getTotal());
        jqGridJson.setRows(list);

        return jqGridJson;
    }


    /**
     * 审核详细页面-操作
     * @param id
     * @param flowId
     * @return
     */
    @RequestMapping(value = "/feeMainReviewAduit", method = RequestMethod.GET)
    @ResponseBody
    public ResultMsg feeMainReviewAduit(@RequestParam(value = "id") Long id, @RequestParam(value = "flowId") Long flowId) {
        try{
            //获取用户信息  后期需调整
            String company = "01";
            //创建活动费用结算单
            FeeMainReview feeMainReview = feeMainReviewService.feeMainReviewAduit(id,flowId);
            return new ResultMsg(Const.MSG_ADD_SUCCESS, Const.CODE_SUCCESS,Const.SUCCESS ,feeMainReview);
        }catch (ValidationException e) {
        e.printStackTrace();
        return new ResultMsg(Const.MSG_ADD_FAILURE, e.getMessage() ,Const.FAILURE ,null);
    } catch (Exception e) {
            logger.error("Exception异常", e);
        return new ResultMsg(Const.MSG_ADD_FAILURE, Const.SYSTEM_ERROR,Const.FAILURE ,null);
    }
    }

    /**
     * 费用动支审核进度查看
     * create by fanna 20180603
     * @return
     */
    @ApiOperation(value = "分页查询费用审核表信息（参数：实体对象属性、pageNum、pageSize）", tags = "费用审核进度信息：FeeMainReviewRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/pageByQueryJqGrid", method = RequestMethod.GET)
    public JQGridJsonResult<FeeMainReviewQueryVo> pageByQueryJqGrid(
            @RequestParam(value = "pageNo", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
            @RequestParam(value = "sord", required = true) String sord,
            FeeMainReviewCondition condition) {

        UserContext userContext=SessionHolder.getUserContext();
        String company = userContext.getComCode();//公司
        condition.setCompany(company);
        //判断人员权限，管理员不受区域和审核级别限制
        if (UserRoleHelp.isAdmin()){
            condition.setAreaCode(null);
        }else {
            if (UserRoleHelp.isMarketingManager()){
                condition.setAreaCode(null);
            }else if (UserRoleHelp.isMarketingWorkers()){
                condition.setAreaCode(null);
            }else if (UserRoleHelp.isRegionalLeaders()) {
                condition.setAreaCode(userContext.getAreaCode());
            }else {
                condition.setAreaCode(userContext.getAreaCode());
            }
        }
        List<FeeMainReviewQueryVo> list = feeMainReviewService.selectReviewQueryList(condition, PageBounds.of(pageNum, pageSize));
        PageInfo<FeeMainReviewQueryVo> pageList = new PageInfo<>(list);
        JQGridJsonResult<FeeMainReviewQueryVo> jqGridJson = new JQGridJsonResult<>();
        jqGridJson.setPage(pageList.getPageNum());
        jqGridJson.setTotal(pageList.getPages());
        jqGridJson.setRecords(pageList.getTotal());
        jqGridJson.setRows(list);

        return jqGridJson;
    }


    /**
     * 查询审核驳回 --fanna
     * 20180606
     * @return
     */
    @ApiOperation(value = "分页查询费用审核表信息（参数：实体对象属性、pageNum、pageSize）", tags = "费用审核表信息：FeeMainReviewRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/pageByJqGridWork", method = RequestMethod.GET)
    public JQGridJsonResult<FeeMainReview> pageByJqGridWork(
            @RequestParam(value = "pageNo", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
            @RequestParam(value = "sord", required = true) String sord,
            FeeMainReviewCondition condition) {
        UserContext userContext=SessionHolder.getUserContext();
        String company = userContext.getComCode();//公司
        condition.setCompany(company);
        //判断人员权限，管理员不受区域和审核级别限制
        if (UserRoleHelp.isAdmin()){
            condition.setAreaCode(null);
        }else {
            if (UserRoleHelp.isMarketingManager()){
                condition.setAreaCode(null);
            }else if (UserRoleHelp.isMarketingWorkers()){
                condition.setAreaCode(null);
            }else if (UserRoleHelp.isRegionalLeaders()) {
                condition.setAreaCode(userContext.getAreaCode());
            }else {
                condition.setAreaCode(userContext.getAreaCode());
            }
        }
        List<FeeMainReview> list = baseService.selectList(condition, PageBounds.of(pageNum, pageSize));

        PageInfo<FeeMainReview> pageList = new PageInfo<>(list);
        JQGridJsonResult<FeeMainReview> jqGridJson = new JQGridJsonResult<>();
        jqGridJson.setPage(pageList.getPageNum());
        jqGridJson.setTotal(pageList.getPages());
        jqGridJson.setRecords(pageList.getTotal());
        jqGridJson.setRows(list);

        return jqGridJson;
    }

    /**
     * 驳回后修改重新提交
     * create by fanna 20180606
     * @param
     * @return
     */
    @RequestMapping(value = "/queryEdit", method = RequestMethod.PATCH)
    @ResponseBody
    public ResultMsg queryEdit(@RequestParam(value = "businessCode") String businessCode, @RequestBody FeeReviewWork feeReviewWork) {
        try{
            UserContext userContext=SessionHolder.getUserContext();
            String company = userContext.getComCode();//公司
            Active active = feeMainReviewService.patchReviewQueryById(businessCode,company,feeReviewWork);

            return new ResultMsg(Const.MSG_SUBMIT_SUCCESS, Const.CODE_SUCCESS,Const.SUCCESS ,active);
        } catch (ValidationException e) {
            e.printStackTrace();
            return new ResultMsg(Const.MSG_SUBMIT_FAILURE, Const.SYSTEM_ERROR ,Const.FAILURE ,null);
        } catch (Exception e) {
            logger.error("提交审核异常", e);
            return new ResultMsg(Const.MSG_SUBMIT_FAILURE, Const.SYSTEM_ERROR,Const.FAILURE ,null);
        }
    }


    @ApiOperation(value = "修改待审核状态为审核中", tags = "修改待审核状态为审核中")
    @RequestMapping(value = "/feeMainReviewQureyView", method = RequestMethod.GET)
    @ResponseBody
    public ResultMsg<String> feeMainReviewQureyView(@RequestParam("businessCode") String businessCode) {
        try{
            feeMainReviewService.updateCheckStatus(businessCode);
            return new ResultMsg<String>(Const.CODE_SUCCESS, "提交成功",Const.SUCCESS,  "");
        } catch (ValidationException e) {
            e.printStackTrace();
            logger.error("修改审核中异常", e);
            return new ResultMsg(Const.MSG_ADD_FAILURE, Const.SYSTEM_ERROR ,Const.FAILURE ,null);
        } catch (Exception e) {
            logger.error("修改审核中异常", e);
            return new ResultMsg(Const.MSG_ADD_FAILURE, Const.SYSTEM_ERROR,Const.FAILURE ,null);
        }
    }




}