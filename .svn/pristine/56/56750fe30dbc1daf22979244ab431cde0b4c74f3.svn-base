package com.yqjr.fin.mkmm.sales.services;

import com.yqjr.fin.mkmm.sales.condition.WorkFlowCondition;
import com.yqjr.scfw.common.pagination.model.PageBounds;
import com.yqjr.scfw.common.service.BaseService;
import com.yqjr.fin.mkmm.sales.entity.WorkFlow;
import com.yqjr.fin.mkmm.sales.mapper.WorkFlowMapper;
import com.yqjr.scfw.common.session.SessionHolder;
import com.yqjr.scfw.common.session.UserContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

@Service
@Transactional(readOnly = true)
public class WorkFlowService extends BaseService<WorkFlowMapper, WorkFlow, Long> {

    //region generated by CodeRobot

    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // ~此线上方代码自动生成，在此下方编写自定义代码。
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    //endregion

    @Autowired
    private WorkFlowMapper workFlowMapper;

    /**
     * 审核信息保存
     * add by xiaoyao 20180525
     * @param type
     * @param review_id
     * @param mod_type
     */
    @Transactional
    public long saveWorkFlowInfo(String type ,String review_id,String mod_type){
        UserContext userContext=SessionHolder.getUserContext();
        //存储一级审核信息
        WorkFlow workFlow=new WorkFlow();
        workFlow.setReviewId(review_id);//活动ID
        workFlow.setType(type);//类型   01-添加  02-修改
        workFlow.setModType(mod_type);//审核类型  01-人员 02-团队 03-活动 04-费用
        workFlow.setReviewLevel("1");//一级审核
        workFlow.setReviewStatus("01");//提交审核
//        workFlow.setModifierName(userContext.getName());//审核人
        this.insert(workFlow);

        //存储二级审核信息
        workFlow.setFlowId(workFlow.getId());
        workFlow.setReviewLevel("1");//一级审核
        workFlow.setReviewStatus("02");//同时增加待审核数据
        this.insert(workFlow);
        return workFlow.getId();
    }


    /**
     * 查审核进度
     * create by fnana
     * @param condition
     * @param pageBounds
     * @return
     */
    public List<WorkFlow> selectWorkFlow(WorkFlowCondition condition, PageBounds... pageBounds){

        return workFlowMapper.selectWorkFlow(condition, pageBounds);
    }

    public WorkFlow selectByActiveMainId(Long mid) {
        return workFlowMapper.selectByActiveMainId(mid);
    }

    public Long selectActiveIDById(Long mid) {
        return workFlowMapper.selectActiveIDById(mid);
    }

    public void updateStatusById(String status, Long flowId, Long modifier) {
        workFlowMapper.updateStatusById(status,flowId,modifier);
    }
}