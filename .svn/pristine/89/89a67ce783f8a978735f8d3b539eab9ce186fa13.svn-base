package com.yqjr.fin.mkmm.sales.services;

import com.yqjr.fin.mkmm.sales.condition.TeamMainCondition;
import com.yqjr.fin.mkmm.sales.condition.TeamReviewCondition;
import com.yqjr.fin.mkmm.sales.vo.domin.PersonTeamVo;
import com.yqjr.scfw.common.pagination.model.PageBounds;
import com.yqjr.scfw.common.service.BaseService;
import com.yqjr.fin.mkmm.sales.entity.TeamMain;
import com.yqjr.fin.mkmm.sales.mapper.TeamMainMapper;
import com.yqjr.scfw.common.session.SessionHolder;
import com.yqjr.scfw.common.session.UserContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import sun.rmi.runtime.Log;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

@Service
@Transactional(readOnly = true)
public class TeamMainService extends BaseService<TeamMainMapper, TeamMain, Long> {

    //region generated by CodeRobot

    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // ~此线上方代码自动生成，在此下方编写自定义代码。
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    //endregion
    @Autowired
    private TeamMainMapper teamMainMapper;

    @Autowired
    private TeamReviewService teamReviewService;

    public int patchByTeamCode(TeamMain teamMain){
        return teamMainMapper.patchByTeamCode(teamMain);
    }

    public List<TeamMain> selectAllTeamStatus(){
        return teamMainMapper.selectAllTeamStatus();
    }
    /**
     * 模糊查询
     * @param teamMainCondition
     * @return
     */
    public List<TeamMain> queryTeamMainList(TeamMainCondition teamMainCondition){
        return teamMainMapper.queryTeamMainList(teamMainCondition);
    }

    //综合查询，团队下人员信息
    public List<PersonTeamVo> queryPersonByTeamCode(String teamCode){
        UserContext userContext=SessionHolder.getUserContext();
        String company = userContext.getComCode();
        List<PersonTeamVo> personTeamVos = teamMainMapper.queryPersonByTeamCode(teamCode,company);
        return personTeamVos;
    }

    //模糊查询团队维护列表
    public List<TeamMain> queryTeamMain(TeamMainCondition teamMainCondition, PageBounds... pageBounds){
        List<TeamMain> teamMains =null;
        teamMains=teamMainMapper.queryTeamMain(teamMainCondition,pageBounds);
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String systemTime = dateFormat.format(new Date());
        for (int i = 0 ; i < teamMains.size(); i++){
            if (teamMains.get(i).getStartTime() == null){
                teamMains.get(i).setTeamStatus("0");
            }else {
                String startTime = dateFormat.format(teamMains.get(i).getStartTime());
                if (systemTime.compareTo(startTime) < 0 ){
                    teamMains.get(i).setTeamStatus("0");
                } else {
                    teamMains.get(i).setTeamStatus("1");
                }
            }
        }
        return teamMains;
    }


    //模糊查询综合查询列表
    public List<TeamMain> queryAllListTeamMain(TeamMainCondition teamMainCondition, PageBounds... pageBounds){
        List<TeamMain> teamMains =null;
        teamMains=teamMainMapper.queryAllListTeamMain(teamMainCondition,pageBounds);
        return teamMains;
    }

    public boolean selectByCode(String teamCode){
        List<TeamMain> teamMains = teamMainMapper.selectByCode(teamCode);
        if(teamMains.size()==0){
            return false;
        }
        return true;
    }

    /**
     * 校验团队是否存在
     * @param teamName
     * @return
     */
    public boolean selectByTeamName(String teamName){
        UserContext context =SessionHolder.getUserContext();
        TeamMainCondition teamMainCondition = new TeamMainCondition();
        teamMainCondition.setTeamName(teamName);
        teamMainCondition.setCompany(context.getComCode());
        int count = teamMainMapper.selectTeamCount(teamMainCondition);//看团队表是否存在
        int count2 = teamReviewService.selectTeamCount(teamName);//看团队审核表是否存在
        int sum = count + count2;
        if(sum == 0){
            return true;
        }
        return false;
    }


}