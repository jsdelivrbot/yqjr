package com.yqjr.fin.mkmm.sales.rest;

import java.util.*;
import javax.validation.Valid;

import com.yqjr.fin.mkmm.sales.common.ResultMsg;
import com.yqjr.fin.mkmm.sales.entity.MaterialOut;
import com.yqjr.fin.mkmm.sales.rest.vo.JxsSelect;
import com.yqjr.fin.mkmm.sales.rest.vo.JxsSelectResult;
import com.yqjr.scfw.common.exception.ValidationException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.StringUtils;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import com.yqjr.scfw.common.pagination.model.PageBounds;
import com.yqjr.scfw.common.model.pagination.PageInfo;
import com.yqjr.scfw.common.Const;
import com.yqjr.scfw.common.rest.BaseRest;
import com.yqjr.scfw.common.results.ObjectResultResponse;
import com.yqjr.scfw.common.results.PageResultResponse;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

import com.yqjr.fin.mkmm.sales.common.JQGridJsonResult;
import com.yqjr.fin.mkmm.sales.entity.MaterialDealer;
import com.yqjr.fin.mkmm.sales.condition.MaterialDealerCondition;
import com.yqjr.fin.mkmm.sales.services.MaterialDealerService;


@Api(consumes = "application/json",
        produces = "application/json",
        protocols = "http",
        basePath = "materialDealers")
@RestController
@RequestMapping(value = "/materialDealers")
public class MaterialDealerRest extends BaseRest<MaterialDealerService, MaterialDealer> {

    //region generated by CodeRobot

    @Autowired
    MaterialDealerService materialDealerService;
    private Logger logger = LoggerFactory.getLogger(getClass());

    @ApiOperation(value = "分页查询素材经销商表（参数：实体对象属性、pageNum、pageSize）", tags = "素材经销商表信息：MaterialDealerRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/page", method = RequestMethod.GET)
    public PageResultResponse<MaterialDealer> page(
            @RequestParam(value = "pageNo", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = false, defaultValue = "10") Integer pageSize,
            MaterialDealerCondition condition) {

        List<MaterialDealer> list = baseService.selectList(condition, PageBounds.of(pageNum, pageSize));
        PageInfo<MaterialDealer> p = new PageInfo<>(list);
        return this.getPageResultResponse(Const.SUCCESS, Const.CODE_SUCCESS, null, p);

    }

    @ApiOperation(value = "分页查询素材经销商表信息（参数：实体对象属性、pageNum、pageSize）", tags = "素材经销商表信息：MaterialDealerRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/pageByJqGrid", method = RequestMethod.GET)
    public JQGridJsonResult<MaterialDealer> pageByJqGrid(
            @RequestParam(value = "pageNo", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
            MaterialDealerCondition condition) {
        List<MaterialDealer> list = baseService.selectList(condition, PageBounds.of(pageNum, pageSize));

        PageInfo<MaterialDealer> pageList = new PageInfo<>(list);
        JQGridJsonResult<MaterialDealer> jqGridJson = new JQGridJsonResult<>();
        jqGridJson.setPage(pageList.getPageNum());
        jqGridJson.setTotal(pageList.getPages());
        jqGridJson.setRecords(pageList.getTotal());
        jqGridJson.setRows(list);

        return jqGridJson;
    }


    /**
     * 销管二期
     * 经销商数据查询接口
     * create by lf
     * 2018/9/4
     * @param
     * @return
     */
    @ApiOperation(value = "素材接收接口", tags = "素材接收信息：MaterialDealerRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/selectOutMesForJxs", method = RequestMethod.GET)
    public JQGridJsonResult<JxsSelectResult> selectOutMesForJxs(
            @RequestParam(value = "pageNo", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
            @RequestParam(value = "dealerCode", required = true)String dealerCode,
            @RequestParam(value = "company", required = true)String company) {
            JxsSelect jxsSelect = new JxsSelect();
            jxsSelect.setCompany(company);
            jxsSelect.setDealerCode(dealerCode);
            List<JxsSelectResult> jxsSelectResults = materialDealerService.selectMessage(jxsSelect,PageBounds.of(pageNum, pageSize));
            PageInfo<JxsSelectResult> pageList = new PageInfo<JxsSelectResult>(jxsSelectResults);
            JQGridJsonResult<JxsSelectResult> jqGridJson = new JQGridJsonResult<JxsSelectResult>();
            jqGridJson.setPage(pageList.getPageNum());
            jqGridJson.setTotal(pageList.getPages());
            jqGridJson.setRecords(pageList.getTotal());
            jqGridJson.setRows(jxsSelectResults);
            return jqGridJson;
    }

    /**
     * 销管二期
     * 经销商点击接收按钮修改状态
     * create by lf
     * 2018/9/4
     * @param id
     * @return
     */
    @ApiOperation(value = "素材接收反馈按钮", tags = "素材接收信息：MaterialDealerRest")
    @RequestMapping(value = "/receiveButton", method = RequestMethod.GET)
    public ObjectResultResponse receiveButton(@RequestParam(value="id",required = true) Long id,
                                              @RequestParam(value="opinion")String opinion) {
        try {
            materialDealerService.update(id,opinion);
            return this.getObjectResultResponse(Const.SUCCESS,Const.CODE_SUCCESS,Const.MSG_PUT_SUCCESS,null);
        }catch(ValidationException e){
            e.printStackTrace();
            return this.getObjectResultResponse(Const.FAILURE,Const.CODE_SUCCESS,"操作失败",null);
        }catch(Exception e){
            e.printStackTrace();
            return this.getObjectResultResponse(Const.FAILURE,Const.CODE_FAILURE,Const.SYSTEM_ERROR,null);
        }
    }
}