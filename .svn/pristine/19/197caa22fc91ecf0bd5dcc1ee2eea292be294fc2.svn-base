<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yqjr.fin.risk.stat.mapper.IndicatorLogsMapper">

    <!-- region BaseMapper DO NOT MODIFY!!!  -->

    <sql id="Base_Table_Name">
        P_INDICATOR_LOGS
    </sql>



    <!-- region BaseResultMap  -->
    <resultMap id="BaseResultMap" type="com.yqjr.fin.risk.stat.entity.IndicatorLogs">
        <result property="id" column="ID"/><!--主键
-->
        <result property="eventid" column="EVENTID"/><!--事件主键-->
        <result property="indId" column="IND_ID"/><!--指标ID-->
        <result property="factdate" column="FACTDATE"/><!--预警日期-->
        <result property="operationtype" column="OPERATIONTYPE"/><!--操作类型-->
        <result property="operationdate" column="OPERATIONDATE"/><!--操作日期-->
        <result property="operationid" column="OPERATIONID"/><!--操作人代码-->
        <result property="operationname" column="OPERATIONNAME"/><!--操作人姓名-->
        <result property="asstest" column="ASSTEST"/><!--内容-->
        <result property="remark" column="REMARK"/><!--备注-->
        <result property="creator" column="CREATOR"/><!--创建人-->
        <result property="createTime" column="CREATE_TIME"/><!--创建时间-->
        <result property="modifier" column="MODIFIER"/><!--最后更新人-->
        <result property="modifyTime" column="MODIFY_TIME"/><!--最后更新时间-->
    </resultMap>
    <!-- endregion -->

    <!-- region Base_Column_List  -->
    <sql id="Base_Column_List">
    ID,EVENTID,IND_ID,FACTDATE,OPERATIONTYPE,OPERATIONDATE,OPERATIONID,OPERATIONNAME,ASSTEST,REMARK,CREATOR,CREATE_TIME,MODIFIER,MODIFY_TIME
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_List_Selective  -->
    <sql id="Base_Column_List_Selective">
        <trim suffixOverrides=",">
            <if test="id != null">
            ID,
            </if>
            <if test="eventid != null">
            EVENTID,
            </if>
            <if test="indId != null">
            IND_ID,
            </if>
            <if test="factdate != null">
            FACTDATE,
            </if>
            <if test="operationtype != null">
            OPERATIONTYPE,
            </if>
            <if test="operationdate != null">
            OPERATIONDATE,
            </if>
            <if test="operationid != null">
            OPERATIONID,
            </if>
            <if test="operationname != null">
            OPERATIONNAME,
            </if>
            <if test="asstest != null">
            ASSTEST,
            </if>
            <if test="remark != null">
            REMARK,
            </if>
            <if test="creator != null">
            CREATOR,
            </if>
            <if test="createTime != null">
            CREATE_TIME,
            </if>
            <if test="modifier != null">
            MODIFIER,
            </if>
            <if test="modifyTime != null">
            MODIFY_TIME
            </if>
        </trim>
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Values  -->
    <sql id="Base_Column_Values">
    #{id},
    #{eventid},
    #{indId},
    #{factdate},
    #{operationtype},
    #{operationdate},
    #{operationid},
    #{operationname},
    #{asstest},
    #{remark},
    #{creator},
    #{createTime},
    #{modifier},
    #{modifyTime}
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Values_Selective  -->
    <sql id="Base_Column_Values_Selective">
        <trim suffixOverrides=",">
            <if test="id != null">
            #{id},
            </if>
            <if test="eventid != null">
            #{eventid},
            </if>
            <if test="indId != null">
            #{indId},
            </if>
            <if test="factdate != null">
            #{factdate},
            </if>
            <if test="operationtype != null">
            #{operationtype},
            </if>
            <if test="operationdate != null">
            #{operationdate},
            </if>
            <if test="operationid != null">
            #{operationid},
            </if>
            <if test="operationname != null">
            #{operationname},
            </if>
            <if test="asstest != null">
            #{asstest},
            </if>
            <if test="remark != null">
            #{remark},
            </if>
            <if test="creator != null">
            #{creator},
            </if>
            <if test="createTime != null">
            #{createTime},
            </if>
            <if test="modifier != null">
            #{modifier},
            </if>
            <if test="modifyTime != null">
            #{modifyTime}
            </if>
        </trim>
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Set_Values  -->
    <sql id="Base_Column_Set_Values">
    ID = #{id},
    EVENTID = #{eventid},
    IND_ID = #{indId},
    FACTDATE = #{factdate},
    OPERATIONTYPE = #{operationtype},
    OPERATIONDATE = #{operationdate},
    OPERATIONID = #{operationid},
    OPERATIONNAME = #{operationname},
    ASSTEST = #{asstest},
    REMARK = #{remark},
    CREATOR = #{creator},
    CREATE_TIME = #{createTime},
    MODIFIER = #{modifier},
    MODIFY_TIME = #{modifyTime}
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Set_Values_Selective  -->
    <sql id="Base_Column_Set_Values_Selective">
        <if test="id != null">
        ID = #{id},
        </if>
        <if test="eventid != null">
        EVENTID = #{eventid},
        </if>
        <if test="indId != null">
        IND_ID = #{indId},
        </if>
        <if test="factdate != null">
        FACTDATE = #{factdate},
        </if>
        <if test="operationtype != null">
        OPERATIONTYPE = #{operationtype},
        </if>
        <if test="operationdate != null">
        OPERATIONDATE = #{operationdate},
        </if>
        <if test="operationid != null">
        OPERATIONID = #{operationid},
        </if>
        <if test="operationname != null">
        OPERATIONNAME = #{operationname},
        </if>
        <if test="asstest != null">
        ASSTEST = #{asstest},
        </if>
        <if test="remark != null">
        REMARK = #{remark},
        </if>
        <if test="creator != null">
        CREATOR = #{creator},
        </if>
        <if test="createTime != null">
        CREATE_TIME = #{createTime},
        </if>
        <if test="modifier != null">
        MODIFIER = #{modifier},
        </if>
        <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime}
        </if>
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Where_Selective  -->
    <sql id="Base_Column_Where_Selective">
        <if test="id != null">
            and ID = #{id}
        </if>
        <if test="eventid != null">
            and EVENTID = #{eventid}
        </if>
        <if test="indId != null">
            and IND_ID = #{indId}
        </if>
        <if test="factdate != null">
            and FACTDATE = #{factdate}
        </if>
        <if test="operationtype != null">
            and OPERATIONTYPE = #{operationtype}
        </if>
        <if test="operationdate != null">
            and OPERATIONDATE = #{operationdate}
        </if>
        <if test="operationid != null">
            and OPERATIONID = #{operationid}
        </if>
        <if test="operationname != null">
            and OPERATIONNAME = #{operationname}
        </if>
        <if test="asstest != null">
            and ASSTEST = #{asstest}
        </if>
        <if test="remark != null">
            and REMARK = #{remark}
        </if>
        <if test="creator != null">
            and CREATOR = #{creator}
        </if>
        <if test="createTime != null">
            and CREATE_TIME = #{createTime}
        </if>
        <if test="modifier != null">
            and MODIFIER = #{modifier}
        </if>
        <if test="modifyTime != null">
            and MODIFY_TIME = #{modifyTime}
        </if>
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Where_Selective_Param1  -->
    <sql id="Base_Column_Where_Selective_Param1">
        <if test="param1.id != null">
            and ID = #{param1.id}
        </if>
        <if test="param1.eventid != null">
            and EVENTID = #{param1.eventid}
        </if>
        <if test="param1.indId != null">
            and IND_ID = #{param1.indId}
        </if>
        <if test="param1.factdate != null">
            and FACTDATE = #{param1.factdate}
        </if>
        <if test="param1.operationtype != null">
            and OPERATIONTYPE = #{param1.operationtype}
        </if>
        <if test="param1.operationdate != null">
            and OPERATIONDATE = #{param1.operationdate}
        </if>
        <if test="param1.operationid != null">
            and OPERATIONID = #{param1.operationid}
        </if>
        <if test="param1.operationname != null">
            and OPERATIONNAME = #{param1.operationname}
        </if>
        <if test="param1.asstest != null">
            and ASSTEST = #{param1.asstest}
        </if>
        <if test="param1.remark != null">
            and REMARK = #{param1.remark}
        </if>
        <if test="param1.creator != null">
            and CREATOR = #{param1.creator}
        </if>
        <if test="param1.createTime != null">
            and CREATE_TIME = #{param1.createTime}
        </if>
        <if test="param1.modifier != null">
            and MODIFIER = #{param1.modifier}
        </if>
        <if test="param1.modifyTime != null">
            and MODIFY_TIME = #{param1.modifyTime}
        </if>
    </sql>
    <!-- endregion -->

    <!-- region Base_Order_By  -->
    <sql id="Base_Order_By">
        <bind name="propName" value="sortField"></bind>
        ORDER BY <include refid="Base_Column_Name" />
        <choose>
            <when test="isAscend">
                ASC
            </when>
            <otherwise>
                DESC
            </otherwise>
        </choose>
    </sql>
    <!-- endregion -->

    <!-- region Base_Column_Name  -->
    <sql id="Base_Column_Name">
        <if test='"id" == propName'>
        ID
        </if>
        <if test='"eventid" == propName'>
        EVENTID
        </if>
        <if test='"indId" == propName'>
        IND_ID
        </if>
        <if test='"factdate" == propName'>
        FACTDATE
        </if>
        <if test='"operationtype" == propName'>
        OPERATIONTYPE
        </if>
        <if test='"operationdate" == propName'>
        OPERATIONDATE
        </if>
        <if test='"operationid" == propName'>
        OPERATIONID
        </if>
        <if test='"operationname" == propName'>
        OPERATIONNAME
        </if>
        <if test='"asstest" == propName'>
        ASSTEST
        </if>
        <if test='"remark" == propName'>
        REMARK
        </if>
        <if test='"creator" == propName'>
        CREATOR
        </if>
        <if test='"createTime" == propName'>
        CREATE_TIME
        </if>
        <if test='"modifier" == propName'>
        MODIFIER
        </if>
        <if test='"modifyTime" == propName'>
        MODIFY_TIME
        </if>
    </sql>
    <!-- endregion -->

    <!-- region Base_Id_Array  -->
    <sql id="Base_Id_Array">
        <foreach collection="array" open="(" close=")" separator="," item="id">
        #{id}
        </foreach>
    </sql>
    <!-- endregion -->

    <!-- region Base_Id_List  -->
    <sql id="Base_Id_List">
        <foreach collection="list" open="(" close=")" separator="," item="id">
        #{id}
        </foreach>
    </sql>
    <!-- endregion -->

    <!-- region Base_Select_All  -->
    <sql id="Base_Select_All">
        select
        <include refid="Base_Column_List" />
        from <include refid="Base_Table_Name" />
    </sql>
    <!-- endregion -->

    <!-- region selectById  -->
    <select id="selectById" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        where ID = #{id}
    </select>
    <!-- endregion -->

    <!-- region selectByIds  -->
    <select id="selectByIds" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        where ID in
        <include refid="Base_Id_List" />
    </select>
    <!-- endregion -->

    <!-- region selectAll  -->
    <select id="selectAll" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
    </select>
    <!-- endregion -->

    <!-- region selectCount  -->
    <select id="selectCount" resultType="int">
        select count(*)
        from <include refid="Base_Table_Name" />
        <where>
            <include refid="Base_Column_Where_Selective" />
        </where>
    </select>
    <!-- endregion -->

    <!-- region select  -->
    <select id="select" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        <where>
            <include refid="Base_Column_Where_Selective" />
        </where>
    </select>
    <!-- endregion -->

    <!-- region selectOne  -->
    <select id="selectOne" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        <where>
            <include refid="Base_Column_Where_Selective" />
        </where>
    </select>
    <!-- endregion -->

    <!-- region selectOrderBy  -->
    <select id="selectOrderBy" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        <where>
            <include refid="Base_Column_Where_Selective_Param1" />
        </where>
        <include refid="Base_Order_By" />
    </select>
    <!-- endregion -->

    <!-- region selectByProperty  -->
    <select id="selectByProperty" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        <where>
            <include refid="Base_Column_Name" /> = #{propValue}
        </where>
    </select>
    <!-- endregion -->

    <!-- region selectByPropertyIn  -->
    <select id="selectByPropertyIn" resultMap="BaseResultMap">
        <include refid="Base_Select_All" />
        <where>
            <include refid="Base_Column_Name" /> IN
            <foreach collection="propValues" open="(" close=")" separator="," item="propValue">
            #{propValue}
            </foreach>
        </where>
    </select>
    <!-- endregion -->

    <!-- region delete  -->
    <delete id="delete">
        delete
        from <include refid="Base_Table_Name" />
        <where>
            <include refid="Base_Column_Where_Selective" />
        </where>
    </delete>
    <!-- endregion -->

    <!-- region deleteById  -->
    <delete id="deleteById">
        delete
        from <include refid="Base_Table_Name" />
        where ID = #{id}
    </delete>
    <!-- endregion -->

    <!-- region deleteByIds  -->
    <delete id="deleteByIds">
        delete
        from <include refid="Base_Table_Name" />
        where ID in
        <include refid="Base_Id_List" />
    </delete>
    <!-- endregion -->

    <!-- region insert  -->
    <insert id="insert" parameterType="com.yqjr.fin.risk.stat.entity.IndicatorLogs">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into <include refid="Base_Table_Name" /> (
        <include refid="Base_Column_List" />
        )
        values (
        <include refid="Base_Column_Values" />
        )
    </insert>
    <!-- endregion -->

    <!-- region updateById  -->
    <update id="updateById" parameterType="com.yqjr.fin.risk.stat.entity.IndicatorLogs">
        update <include refid="Base_Table_Name" />
        <set>
            <include refid="Base_Column_Set_Values" />
        </set>
        where ID = #{id}
    </update>
    <!-- endregion -->

    <!-- region patchById  -->
    <update id="patchById" parameterType="com.yqjr.fin.risk.stat.entity.IndicatorLogs">
        update <include refid="Base_Table_Name" />
        <set>
            <include refid="Base_Column_Set_Values_Selective" />
        </set>
        where ID = #{id}
    </update>
    <!-- endregion -->

    <!-- endregion BaseMapper -->

    <!-- region generated by CodeRobot  -->

    <!-- region 结果集映射  -->
    <resultMap id="IndicatorLogsResult" type="com.yqjr.fin.risk.stat.entity.IndicatorLogs">
        <result property="id" column="ID"/><!--主键
-->
        <result property="eventid" column="EVENTID"/><!--事件主键-->
        <result property="indId" column="IND_ID"/><!--指标ID-->
        <result property="factdate" column="FACTDATE"/><!--预警日期-->
        <result property="operationtype" column="OPERATIONTYPE"/><!--操作类型-->
        <result property="operationdate" column="OPERATIONDATE"/><!--操作日期-->
        <result property="operationid" column="OPERATIONID"/><!--操作人代码-->
        <result property="operationname" column="OPERATIONNAME"/><!--操作人姓名-->
        <result property="asstest" column="ASSTEST"/><!--内容-->
        <result property="remark" column="REMARK"/><!--备注-->
        <result property="creator" column="CREATOR"/><!--创建人-->
        <result property="createTime" column="CREATE_TIME"/><!--创建时间-->
        <result property="modifier" column="MODIFIER"/><!--最后更新人-->
        <result property="modifyTime" column="MODIFY_TIME"/><!--最后更新时间-->
    </resultMap>
    <!-- endregion -->

    <!-- 查询条件判断 入参为对象 条件为模糊-->
    <sql id="queryLikeIndicatorLogs">
        <if test="indicatorLogs!=null">
            <if test="id!=null and id!=''">
                AND ID LIKE CONCAT('%'#{id}'%')<!--主键
-->
            </if>
            <if test="eventid!=null and eventid!=''">
                AND EVENTID LIKE CONCAT('%'#{eventid}'%')<!--事件主键-->
            </if>
            <if test="indId!=null and indId!=''">
                AND IND_ID LIKE CONCAT('%'#{indId}'%')<!--指标ID-->
            </if>
            <if test="factdate!=null and factdate!=''">
                AND FACTDATE LIKE CONCAT('%'#{factdate}'%')<!--预警日期-->
            </if>
            <if test="operationtype!=null and operationtype!=''">
                AND OPERATIONTYPE LIKE CONCAT('%'#{operationtype}'%')<!--操作类型-->
            </if>
            <if test="operationdate!=null and operationdate!=''">
                AND OPERATIONDATE LIKE CONCAT('%'#{operationdate}'%')<!--操作日期-->
            </if>
            <if test="operationid!=null and operationid!=''">
                AND OPERATIONID LIKE CONCAT('%'#{operationid}'%')<!--操作人代码-->
            </if>
            <if test="operationname!=null and operationname!=''">
                AND OPERATIONNAME LIKE CONCAT('%'#{operationname}'%')<!--操作人姓名-->
            </if>
            <if test="asstest!=null and asstest!=''">
                AND ASSTEST LIKE CONCAT('%'#{asstest}'%')<!--内容-->
            </if>
            <if test="remark!=null and remark!=''">
                AND REMARK LIKE CONCAT('%'#{remark}'%')<!--备注-->
            </if>
            <if test="creator!=null and creator!=''">
                AND CREATOR LIKE CONCAT('%'#{creator}'%')<!--创建人-->
            </if>
            <if test="createTime!=null and createTime!=''">
                AND CREATE_TIME LIKE CONCAT('%'#{createTime}'%')<!--创建时间-->
            </if>
            <if test="modifier!=null and modifier!=''">
                AND MODIFIER LIKE CONCAT('%'#{modifier}'%')<!--最后更新人-->
            </if>
            <if test="modifyTime!=null and modifyTime!=''">
                MODIFY_TIME LIKE CONCAT('%'#{modifyTime}'%')<!--最后更新时间-->
            </if>
        </if>
    </sql>

    <!-- 按条件模糊查询所有 -->
    <select id="queryIndicatorLogsList" parameterType="com.yqjr.fin.risk.stat.entity.IndicatorLogs"
            resultMap="IndicatorLogsResult">
        SELECT
        ID,<!--主键
-->
        EVENTID,<!--事件主键-->
        IND_ID,<!--指标ID-->
        FACTDATE,<!--预警日期-->
        OPERATIONTYPE,<!--操作类型-->
        OPERATIONDATE,<!--操作日期-->
        OPERATIONID,<!--操作人代码-->
        OPERATIONNAME,<!--操作人姓名-->
        ASSTEST,<!--内容-->
        REMARK,<!--备注-->
        CREATOR,<!--创建人-->
        CREATE_TIME,<!--创建时间-->
        MODIFIER,<!--最后更新人-->
        MODIFY_TIME<!--最后更新时间-->
        FROM P_INDICATOR_LOGS
        <where>
            <include refid="queryLikeIndicatorLogs"/>
        </where>
    </select>

    <!-- 按条件模糊统计所有条数 -->
    <select id="queryIndicatorLogsCount" parameterType="com.yqjr.fin.risk.stat.entity.IndicatorLogs" resultType="int">
        SELECT
        count (id)
        FROM P_INDICATOR_LOGS
        <where>
            <include refid="queryLikeIndicatorLogs"/>
        </where>
    </select>

    <!-- 批量删除，入参为数组  -->
    <delete id="dynamicDelete">
        delete from P_INDICATOR_LOGS where id in
        <foreach collection="array" open="(" close=")" separator="," item="arr">
            #{arr}
        </foreach>
    </delete>

    <!-- 批量删除，入参为list  -->
    <delete id="dynamicDeleteList">
        delete from P_INDICATOR_LOGS where id in
        <foreach collection="list" open="(" close=")" separator="," item="ids">
            #{ids}
        </foreach>
    </delete>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="java.util.List">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into P_INDICATOR_LOGS
        (
        <include refid="Base_Column_List" />
        )
        values
        <foreach collection="list" item="indicatorLogs" index="index" separator=",">
            (
            <include refid="Base_Column_Values" />
            )
        </foreach>
    </insert>

    <!-- 插入单条数据，并返回主键ID -->
    <insert id="saveObj" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.yqjr.fin.risk.stat.entity.IndicatorLogs">
        insert into P_INDICATOR_LOGS
        (
        <include refid="Base_Column_List" />
        )
        values
        (
        <include refid="Base_Column_Values" />
        )
    </insert>


    <!-- **********************************************************************-->
    <!-- ************* 在此下方为一对一、一对多查询方式 仅供参考***************-->
    <!-- **********************************************************************-->
    <!-- 一个博客（BlogInfo） 属于一个作者（Author） ，一个作者（Author） 有多篇文章（Post） -->
    <!--
  <resultMap type="com.foo.bean.BlogInfo" id="BlogInfo">
      <id column="blog_id" property="blogId" />
      <result column="title" property="title" />
      <association property="author" column="blog_author_id"
          javaType="com.foo.bean.Author" select="com.foo.bean.AuthorMapper.selectByPrimaryKey">
      </association>
      <collection property="posts" column="blog_id" ofType="com.foo.bean.Post"
          select="com.foo.bean.PostMapper.selectByBlogId">
      </collection>
  </resultMap>

  <select id="queryBlogInfoById" resultMap="BlogInfo" parameterType="java.math.BigDecimal">
      SELECT
      B.BLOG_ID,
      B.TITLE,
      B.AUTHOR_ID AS BLOG_AUTHOR_ID
      FROM BLOG B
      where B.BLOG_ID = 博客ID
  </select>

          上述方法存在N+1问题
      它的弊端也比较明显：即所谓的N+1问题。关联的嵌套查询显示得到一个结果集，然后根据这个结果集的每一条记录进行关联查询。
      现在假设嵌套查询就一个（即resultMap 内部就一个association标签），现查询的结果集返回条数为N，那么关联查询语句将会被执行N次，加上自身返回结果集查询1次，共需要访问数据库N+1次。如果N比较大的话，这样的数据库访问消耗是非常大的！所以使用这种嵌套语句查询的使用者一定要考虑慎重考虑，确保N值不会很大。
      以上面的例子为例，select 语句本身会返回com.foo.bean.BlogMapper.queryBlogInfoById 条数为1 的结果集，由于它有两条关联的语句查询，它需要共访问数据库 1*（1+1）=3次数据库。


       <resultMap type="com.foo.bean.BlogInfo" id="BlogInfo">
      <id column="blog_id" property="blogId"/>
      <result column="title" property="title"/>
      <association property="author" column="blog_author_id" javaType="com.foo.bean.Author">
          <id column="author_id" property="authorId"/>
          <result column="user_name" property="userName"/>
          <result column="password" property="password"/>
          <result column="email" property="email"/>
          <result column="biography" property="biography"/>
      </association>
      <collection property="posts" column="blog_post_id" ofType="com.foo.bean.Post">
          <id column="post_id" property="postId"/>
          <result column="blog_id" property="blogId"/>
          <result column="create_time" property="createTime"/>
          <result column="subject" property="subject"/>
          <result column="body" property="body"/>
          <result column="draft" property="draft"/>
      </collection>
      </resultMap>


      <select id="queryAllBlogInfo" resultMap="BlogInfo">
          SELECT
           B.BLOG_ID,
           B.TITLE,
           B.AUTHOR_ID AS BLOG_AUTHOR_ID,
           A.AUTHOR_ID,
           A.USER_NAME,
           A.PASSWORD,
           A.EMAIL,
           A.BIOGRAPHY,
           P.POST_ID,
           P.BLOG_ID AS BLOG_POST_ID ,
             P.CREATE_TIME,
           P.SUBJECT,
           P.BODY,
           P.DRAFT
      FROM BLOG B
      LEFT OUTER JOIN AUTHOR A
        ON B.AUTHOR_ID = A.AUTHOR_ID
      LEFT OUTER JOIN POST P
        ON P.BLOG_ID = B.BLOG_ID
      </select>
      -->

    <!-- **********************************************************************-->
    <!-- ************* 此线上方代码自动生成，在此下方编写自定义代码。***************-->
    <!-- **********************************************************************-->

    <!-- endregion -->


</mapper>

