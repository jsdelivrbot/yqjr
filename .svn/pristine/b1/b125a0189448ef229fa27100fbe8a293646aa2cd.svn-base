package com.yqjr.fin.mkmm.sales.rest;

import java.util.*;

import com.yqjr.fin.mkmm.sales.common.UserRoleHelp;
import com.yqjr.fin.mkmm.sales.condition.ActiveMainProcessCondition;
import com.yqjr.fin.mkmm.sales.condition.ActiveReviewListCondition;
import com.yqjr.fin.mkmm.sales.rest.vo.ActiveMainProcessReviewVo;
import com.yqjr.scfw.common.session.SessionHolder;
import com.yqjr.scfw.common.session.UserContext;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.yqjr.scfw.common.pagination.model.PageBounds;
import com.yqjr.scfw.common.model.pagination.PageInfo;
import com.yqjr.scfw.common.Const;
import com.yqjr.scfw.common.rest.BaseRest;
import com.yqjr.scfw.common.results.PageResultResponse;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

import com.yqjr.fin.mkmm.sales.common.JQGridJsonResult;
import com.yqjr.fin.mkmm.sales.entity.ActiveMainReview;
import com.yqjr.fin.mkmm.sales.condition.ActiveMainReviewCondition;
import com.yqjr.fin.mkmm.sales.services.ActiveMainReviewService;


@Api(consumes = "application/json",
        produces = "application/json",
        protocols = "http",
        basePath = "activeMainReviews")
@RestController
@RequestMapping(value = "/activeMainReviews")
public class ActiveMainReviewRest extends BaseRest<ActiveMainReviewService, ActiveMainReview> {

    //region generated by CodeRobot

    private Logger logger = LoggerFactory.getLogger(getClass());

    @Autowired
    private ActiveMainReviewService activeMainReviewService;

    @ApiOperation(value = "分页查询活动审核主表（参数：实体对象属性、pageNum、pageSize）", tags = "活动审核主表信息：ActiveMainReviewRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNum", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/page", method = RequestMethod.GET)
    public PageResultResponse<ActiveMainReview> page(
            @RequestParam(value = "pageNum", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = false, defaultValue = "10") Integer pageSize,
            ActiveMainReviewCondition condition) {

        List<ActiveMainReview> list = baseService.selectList(condition, PageBounds.of(pageNum, pageSize));
        PageInfo<ActiveMainReview> p = new PageInfo<>(list);
        return this.getPageResultResponse(Const.SUCCESS, Const.CODE_SUCCESS, null, p);

    }

    @ApiOperation(value = "分页查询活动审核主表信息（参数：实体对象属性、pageNum、pageSize）", tags = "活动审核主表信息：ActiveMainReviewRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/pageByJqGrid", method = RequestMethod.GET)
    public JQGridJsonResult<ActiveMainReview> pageByJqGrid(
            @RequestParam(value = "pageNo", required = true, defaultValue = "1") Integer pageNum,
            @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
            @RequestParam(value = "sord", required = true) String sord,
            ActiveReviewListCondition condition) {
        UserContext userContext = SessionHolder.getUserContext();
        condition.setCompany(userContext.getComCode());     //添加公司作为筛选条件
        if (UserRoleHelp.isAdmin()){
            condition.setReviewLevel(null);
            condition.setAreaCode(null);
            condition.setFounderLevel(null);
        }else {
            if (UserRoleHelp.isMarketingManager()){
                condition.setAreaCode(null);
                condition.setReviewLevel("2");
                condition.setFounderLevel(null);
            }else if (UserRoleHelp.isMarketingWorkers()){
                condition.setAreaCode(null);
                condition.setReviewLevel("1");
                condition.setFounderLevel("03");
            }else if (UserRoleHelp.isRegionalLeaders()) {
                condition.setAreaCode(userContext.getAreaCode());
                condition.setReviewLevel("1");
                condition.setFounderLevel("02");
            }else {
                condition.setAreaCode(userContext.getAreaCode());
                condition.setReviewLevel("0");
            }
        }
        List<ActiveMainReview> list = activeMainReviewService.selectReviewList(condition, PageBounds.of(pageNum, pageSize));
        PageInfo<ActiveMainReview> pageList = new PageInfo<>(list);
        JQGridJsonResult<ActiveMainReview> jqGridJson = new JQGridJsonResult<>();
        jqGridJson.setPage(pageList.getPageNum());
        jqGridJson.setTotal(pageList.getPages());
        jqGridJson.setRecords(pageList.getTotal());
        jqGridJson.setRows(list);

        return jqGridJson;
    }

    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    // ~此线上方代码自动生成，在此下方编写自定义代码。
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    @ApiOperation(value = "分页查询活动审核进度信息（参数：实体对象属性、pageNum、pageSize）", tags = "活动审核进度信息：ActiveMainReviewRest")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNo", value = "页数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageSize", value = "每页记录数", required = true, dataType = "Integer")
    })
    @RequestMapping(value = "/processlist", method = RequestMethod.GET)
    public JQGridJsonResult<ActiveMainProcessReviewVo> processlist(
            @RequestParam(value = "pageNo", required = true, defaultValue = "1") Integer pageNo,
            @RequestParam(value = "pageSize", required = true, defaultValue = "10") Integer pageSize,
            @RequestParam(value = "sord", required = true) String sord,
            ActiveMainProcessCondition condition) {
        UserContext userContext = SessionHolder.getUserContext();
        condition.setCreator(Long.parseLong(userContext.getId()));
//        condition.setCompany(userContext.getComCode());     //添加公司作为筛选条件
//        if (UserRoleHelp.isAdmin() || UserRoleHelp.isMarketingManager() || UserRoleHelp.isMarketingWorkers()){
//            if ("00".equals(condition.getAreaCode())){      //前台传00为全部
//                condition.setAreaCode(null);
//            }
//        }else {
//            condition.setAreaCode(userContext.getAreaCode());
//        }
        if ("00".equals(condition.getBrandsCode())){    //前台传00为全部
            condition.setBrandsCode(null);
        }
        if ("00".equals(condition.getAreaCode())){
            condition.setAreaCode(null);
        }
        if ("00".equals(condition.getBrandsCode())){
            condition.setBrandsCode(null);
        }
        List<ActiveMainProcessReviewVo> list = activeMainReviewService.selectProcessReviewList(condition, PageBounds.of(pageNo, pageSize));
        PageInfo<ActiveMainProcessReviewVo> pageList = new PageInfo<>(list);
        JQGridJsonResult<ActiveMainProcessReviewVo> jqGridJson = new JQGridJsonResult<>();
        jqGridJson.setPage(pageList.getPageNum());
        jqGridJson.setTotal(pageList.getPages());
        jqGridJson.setRecords(pageList.getTotal());
        jqGridJson.setRows(list);

        return jqGridJson;
    }

    //endregion
}